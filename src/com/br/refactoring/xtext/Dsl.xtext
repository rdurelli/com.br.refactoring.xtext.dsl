// automatically generated by Xtext
grammar com.br.refactoring.xtext.Dsl with org.eclipse.xtext.common.Terminals 

import "platform:/resource/com.br.refactoring.dsl/model/refactoring.ecore" 

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model: 
	'model' name=ID
	(imports+=Import)*
	(contains+=Type)*
;

Import: 
	'importing' importURI=STRING
;


Type: 
	Class | Refactoring
;

Class: 
	'Class' name = ID '{'
		
		(attributes+=Attribute)*
		(methods+=Method)*
		
	'}'
;

Attribute:
	 
	'@' elementType = ElementType name = ID 
;

ElementType: 
	BasicType | ClassType
;

BasicType: 
	typeName = ('string' | 'int' | 'boolean' | 'float' | 'char' | 'byte' | 'short' | 'lo ng' | 'double')
;

ClassType: 
	classType = [Class]
;

Method: 
	'def' name = ID
;


Refactoring: 
	RenameFeature | MovingFeaturesBetweenObjects
;

RenameFeature: 
	'Rename_Feature' name = ID '{'
	
	 	(allRefactorings+=RenameClass)*
	 	(allRefactorings+=RenameAttribute)*
	 	(allRefactorings+=RenameMethod)*

   '}'
;

RenameClass: 
	'Refactoring_RenameClass' name = ID '{'
		'classToBeRename' ':' classToBeRename = [Class]
		'newName' ':' newName = ID
	'}'
;

RenameAttribute: 
	'Refactiong_RenameAttribute' name = ID '{'
		'sourceClass' ':' sourceClass = [Class]
		'attributeToBeRename' ':' attributeToBeRename = [Attribute]
		'newName' ':' newName = ID
	'}'
;

RenameMethod: 
	'Refactoring_RenameMethod' name = ID '{'
		'sourceClass' ':' sourceClass = [Class]
		'methodToBeRename' ':' methodToBeRename = [Method]
		'newName' ':' newName = ID
	'}'	
;

MovingFeaturesBetweenObjects: 
	'MovingFeaturesBetweenObjects' name = ID '{'
		(allRefactorings+=MoveAttribute)*
	
	'}'
;

MoveAttribute: 
	'Refactoring_MoveAttribute' name = ID '{'
		'sourceClass' ':' sourceClass = [Class]
		'targetClass' ':' targetClass = [Class]
		'attributeToBeMoved' ':' attributeToBeMoved = [Attribute]
	'}'
;







