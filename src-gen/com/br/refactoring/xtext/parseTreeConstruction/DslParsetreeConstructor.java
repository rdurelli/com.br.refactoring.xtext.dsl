/*
* generated by Xtext
*/
package com.br.refactoring.xtext.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import com.br.refactoring.xtext.services.DslGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class DslParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private DslGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_Group(this, this, 0, inst);
			case 1: return new Import_Group(this, this, 1, inst);
			case 2: return new Type_Alternatives(this, this, 2, inst);
			case 3: return new Class_Group(this, this, 3, inst);
			case 4: return new Attribute_Group(this, this, 4, inst);
			case 5: return new ElementType_Alternatives(this, this, 5, inst);
			case 6: return new BasicType_TypeNameAssignment(this, this, 6, inst);
			case 7: return new ClassType_ClassTypeAssignment(this, this, 7, inst);
			case 8: return new Method_Group(this, this, 8, inst);
			case 9: return new Refactoring_Alternatives(this, this, 9, inst);
			case 10: return new RenameFeature_Group(this, this, 10, inst);
			case 11: return new RenameClass_Group(this, this, 11, inst);
			case 12: return new RenameAttribute_Group(this, this, 12, inst);
			case 13: return new RenameMethod_Group(this, this, 13, inst);
			case 14: return new MovingFeaturesBetweenObjects_Group(this, this, 14, inst);
			case 15: return new MoveAttribute_Group(this, this, 15, inst);
			case 16: return new MoveMethod_Group(this, this, 16, inst);
			case 17: return new ExtractClass_Group(this, this, 17, inst);
			case 18: return new InlineClass_Group(this, this, 18, inst);
			case 19: return new OrganizingData_Group(this, this, 19, inst);
			case 20: return new ReplaceDataValueWithObject_Group(this, this, 20, inst);
			case 21: return new EncapsulateField_Group(this, this, 21, inst);
			case 22: return new DealingWithGeneralization_Group(this, this, 22, inst);
			case 23: return new PushDownAttribute_Group(this, this, 23, inst);
			case 24: return new PushDownMethod_Group(this, this, 24, inst);
			case 25: return new PullUpAttribute_Group(this, this, 25, inst);
			case 26: return new PullUpMethod_Group(this, this, 26, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule Model ****************
 *
 * Model:
 * 	"model" name=ID imports+=Import* contains+=Type*;
 *
 **/

// "model" name=ID imports+=Import* contains+=Type*
protected class Model_Group extends GroupToken {
	
	public Model_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_ContainsAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Model_ImportsAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Model_NameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModelRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "model"
protected class Model_ModelKeyword_0 extends KeywordToken  {
	
	public Model_ModelKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getModelKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class Model_NameAssignment_1 extends AssignmentToken  {
	
	public Model_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_ModelKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// imports+=Import*
protected class Model_ImportsAssignment_2 extends AssignmentToken  {
	
	public Model_ImportsAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getImportsAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Import_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("imports",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("imports");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getImportRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getImportsImportParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Model_ImportsAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Model_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// contains+=Type*
protected class Model_ContainsAssignment_3 extends AssignmentToken  {
	
	public Model_ContainsAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getContainsAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Type_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("contains",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("contains");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getContainsTypeParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Model_ContainsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Model_ImportsAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new Model_NameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule Model ****************/


/************ begin Rule Import ****************
 *
 * Import:
 * 	"importing" importURI=STRING;
 *
 **/

// "importing" importURI=STRING
protected class Import_Group extends GroupToken {
	
	public Import_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getImportAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Import_ImportURIAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getImportRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "importing"
protected class Import_ImportingKeyword_0 extends KeywordToken  {
	
	public Import_ImportingKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getImportAccess().getImportingKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// importURI=STRING
protected class Import_ImportURIAssignment_1 extends AssignmentToken  {
	
	public Import_ImportURIAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getImportAccess().getImportURIAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Import_ImportingKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("importURI",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("importURI");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Import ****************/


/************ begin Rule Type ****************
 *
 * Type:
 * 	Class | Refactoring;
 *
 **/

// Class | Refactoring
protected class Type_Alternatives extends AlternativesToken {

	public Type_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getTypeAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Type_ClassParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Type_RefactoringParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getClassRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDealingWithGeneralizationRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMovingFeaturesBetweenObjectsRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getOrganizingDataRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getRenameFeatureRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// Class
protected class Type_ClassParserRuleCall_0 extends RuleCallToken {
	
	public Type_ClassParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTypeAccess().getClassParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getClassRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Class_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Refactoring
protected class Type_RefactoringParserRuleCall_1 extends RuleCallToken {
	
	public Type_RefactoringParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getTypeAccess().getRefactoringParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Refactoring_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDealingWithGeneralizationRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMovingFeaturesBetweenObjectsRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getOrganizingDataRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getRenameFeatureRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Refactoring_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Type ****************/


/************ begin Rule Class ****************
 *
 * Class:
 * 	"Class" name=ID "{" attributes+=Attribute* methods+=Method* "}";
 *
 **/

// "Class" name=ID "{" attributes+=Attribute* methods+=Method* "}"
protected class Class_Group extends GroupToken {
	
	public Class_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getClassAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getClassRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Class"
protected class Class_ClassKeyword_0 extends KeywordToken  {
	
	public Class_ClassKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassAccess().getClassKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class Class_NameAssignment_1 extends AssignmentToken  {
	
	public Class_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_ClassKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Class_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public Class_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// attributes+=Attribute*
protected class Class_AttributesAssignment_3 extends AssignmentToken  {
	
	public Class_AttributesAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassAccess().getAttributesAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributes",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributes");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAttributeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getClassAccess().getAttributesAttributeParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Class_AttributesAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Class_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// methods+=Method*
protected class Class_MethodsAssignment_4 extends AssignmentToken  {
	
	public Class_MethodsAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassAccess().getMethodsAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("methods",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("methods");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMethodRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getClassAccess().getMethodsMethodParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Class_MethodsAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Class_AttributesAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new Class_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class Class_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public Class_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Class_MethodsAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Class_AttributesAssignment_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Class_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule Class ****************/


/************ begin Rule Attribute ****************
 *
 * Attribute:
 * 	"@" elementType=ElementType name=ID;
 *
 **/

// "@" elementType=ElementType name=ID
protected class Attribute_Group extends GroupToken {
	
	public Attribute_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAttributeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAttributeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "@"
protected class Attribute_CommercialAtKeyword_0 extends KeywordToken  {
	
	public Attribute_CommercialAtKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAttributeAccess().getCommercialAtKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// elementType=ElementType
protected class Attribute_ElementTypeAssignment_1 extends AssignmentToken  {
	
	public Attribute_ElementTypeAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAttributeAccess().getElementTypeAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ElementType_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elementType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elementType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getElementTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAttributeAccess().getElementTypeElementTypeParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Attribute_CommercialAtKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// name=ID
protected class Attribute_NameAssignment_2 extends AssignmentToken  {
	
	public Attribute_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAttributeAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_ElementTypeAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Attribute ****************/


/************ begin Rule ElementType ****************
 *
 * ElementType:
 * 	BasicType | ClassType;
 *
 **/

// BasicType | ClassType
protected class ElementType_Alternatives extends AlternativesToken {

	public ElementType_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getElementTypeAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ElementType_BasicTypeParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ElementType_ClassTypeParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBasicTypeRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getClassTypeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// BasicType
protected class ElementType_BasicTypeParserRuleCall_0 extends RuleCallToken {
	
	public ElementType_BasicTypeParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getElementTypeAccess().getBasicTypeParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BasicType_TypeNameAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBasicTypeRule().getType().getClassifier())
			return null;
		if(checkForRecursion(BasicType_TypeNameAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ClassType
protected class ElementType_ClassTypeParserRuleCall_1 extends RuleCallToken {
	
	public ElementType_ClassTypeParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getElementTypeAccess().getClassTypeParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ClassType_ClassTypeAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getClassTypeRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ClassType_ClassTypeAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule ElementType ****************/


/************ begin Rule BasicType ****************
 *
 * BasicType:
 * 	typeName=("string" | "int" | "boolean" | "float" | "char" | "byte" | "short" | "long" | "double");
 *
 **/

// typeName=("string" | "int" | "boolean" | "float" | "char" | "byte" | "short" | "long" | "double")
protected class BasicType_TypeNameAssignment extends AssignmentToken  {
	
	public BasicType_TypeNameAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBasicTypeAccess().getTypeNameAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBasicTypeRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("typeName",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("typeName");
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getBasicTypeAccess().getTypeNameStringKeyword_0_0(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBasicTypeAccess().getTypeNameStringKeyword_0_0();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getBasicTypeAccess().getTypeNameIntKeyword_0_1(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBasicTypeAccess().getTypeNameIntKeyword_0_1();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getBasicTypeAccess().getTypeNameBooleanKeyword_0_2(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBasicTypeAccess().getTypeNameBooleanKeyword_0_2();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getBasicTypeAccess().getTypeNameFloatKeyword_0_3(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBasicTypeAccess().getTypeNameFloatKeyword_0_3();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getBasicTypeAccess().getTypeNameCharKeyword_0_4(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBasicTypeAccess().getTypeNameCharKeyword_0_4();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getBasicTypeAccess().getTypeNameByteKeyword_0_5(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBasicTypeAccess().getTypeNameByteKeyword_0_5();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getBasicTypeAccess().getTypeNameShortKeyword_0_6(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBasicTypeAccess().getTypeNameShortKeyword_0_6();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getBasicTypeAccess().getTypeNameLongKeyword_0_7(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBasicTypeAccess().getTypeNameLongKeyword_0_7();
			return obj;
		}
		if(keywordSerializer.isValid(obj.getEObject(), grammarAccess.getBasicTypeAccess().getTypeNameDoubleKeyword_0_8(), value, null)) {
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getBasicTypeAccess().getTypeNameDoubleKeyword_0_8();
			return obj;
		}
		return null;
	}

}

/************ end Rule BasicType ****************/


/************ begin Rule ClassType ****************
 *
 * ClassType:
 * 	classType=[Class];
 *
 **/

// classType=[Class]
protected class ClassType_ClassTypeAssignment extends AssignmentToken  {
	
	public ClassType_ClassTypeAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getClassTypeAccess().getClassTypeAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getClassTypeRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("classType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("classType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getClassTypeAccess().getClassTypeClassCrossReference_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getClassTypeAccess().getClassTypeClassCrossReference_0(); 
				return obj;
			}
		}
		return null;
	}

}

/************ end Rule ClassType ****************/


/************ begin Rule Method ****************
 *
 * Method:
 * 	"def" name=ID;
 *
 **/

// "def" name=ID
protected class Method_Group extends GroupToken {
	
	public Method_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMethodAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMethodRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "def"
protected class Method_DefKeyword_0 extends KeywordToken  {
	
	public Method_DefKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMethodAccess().getDefKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class Method_NameAssignment_1 extends AssignmentToken  {
	
	public Method_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMethodAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Method_DefKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule Method ****************/


/************ begin Rule Refactoring ****************
 *
 * Refactoring:
 * 	RenameFeature | MovingFeaturesBetweenObjects | OrganizingData | DealingWithGeneralization;
 *
 **/

// RenameFeature | MovingFeaturesBetweenObjects | OrganizingData | DealingWithGeneralization
protected class Refactoring_Alternatives extends AlternativesToken {

	public Refactoring_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getRefactoringAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Refactoring_RenameFeatureParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Refactoring_MovingFeaturesBetweenObjectsParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Refactoring_OrganizingDataParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Refactoring_DealingWithGeneralizationParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDealingWithGeneralizationRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMovingFeaturesBetweenObjectsRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getOrganizingDataRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getRenameFeatureRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// RenameFeature
protected class Refactoring_RenameFeatureParserRuleCall_0 extends RuleCallToken {
	
	public Refactoring_RenameFeatureParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getRefactoringAccess().getRenameFeatureParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRenameFeatureRule().getType().getClassifier())
			return null;
		if(checkForRecursion(RenameFeature_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// MovingFeaturesBetweenObjects
protected class Refactoring_MovingFeaturesBetweenObjectsParserRuleCall_1 extends RuleCallToken {
	
	public Refactoring_MovingFeaturesBetweenObjectsParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getRefactoringAccess().getMovingFeaturesBetweenObjectsParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MovingFeaturesBetweenObjects_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMovingFeaturesBetweenObjectsRule().getType().getClassifier())
			return null;
		if(checkForRecursion(MovingFeaturesBetweenObjects_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// OrganizingData
protected class Refactoring_OrganizingDataParserRuleCall_2 extends RuleCallToken {
	
	public Refactoring_OrganizingDataParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getRefactoringAccess().getOrganizingDataParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrganizingData_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getOrganizingDataRule().getType().getClassifier())
			return null;
		if(checkForRecursion(OrganizingData_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// DealingWithGeneralization
protected class Refactoring_DealingWithGeneralizationParserRuleCall_3 extends RuleCallToken {
	
	public Refactoring_DealingWithGeneralizationParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getRefactoringAccess().getDealingWithGeneralizationParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DealingWithGeneralization_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDealingWithGeneralizationRule().getType().getClassifier())
			return null;
		if(checkForRecursion(DealingWithGeneralization_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Refactoring ****************/


/************ begin Rule RenameFeature ****************
 *
 * RenameFeature:
 * 	"Rename_Feature" name=ID "{" allRefactorings+=RenameClass* allRefactorings+=RenameAttribute*
 * 	allRefactorings+=RenameMethod* "}";
 *
 **/

// "Rename_Feature" name=ID "{" allRefactorings+=RenameClass* allRefactorings+=RenameAttribute*
// allRefactorings+=RenameMethod* "}"
protected class RenameFeature_Group extends GroupToken {
	
	public RenameFeature_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRenameFeatureAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameFeature_RightCurlyBracketKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRenameFeatureRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Rename_Feature"
protected class RenameFeature_Rename_FeatureKeyword_0 extends KeywordToken  {
	
	public RenameFeature_Rename_FeatureKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameFeatureAccess().getRename_FeatureKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class RenameFeature_NameAssignment_1 extends AssignmentToken  {
	
	public RenameFeature_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameFeatureAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameFeature_Rename_FeatureKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRenameFeatureAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRenameFeatureAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class RenameFeature_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public RenameFeature_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameFeatureAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameFeature_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// allRefactorings+=RenameClass*
protected class RenameFeature_AllRefactoringsAssignment_3 extends AssignmentToken  {
	
	public RenameFeature_AllRefactoringsAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameFeatureAccess().getAllRefactoringsAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameClass_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allRefactorings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allRefactorings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRenameClassRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRenameFeatureAccess().getAllRefactoringsRenameClassParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RenameFeature_AllRefactoringsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new RenameFeature_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allRefactorings+=RenameAttribute*
protected class RenameFeature_AllRefactoringsAssignment_4 extends AssignmentToken  {
	
	public RenameFeature_AllRefactoringsAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameFeatureAccess().getAllRefactoringsAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameAttribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allRefactorings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allRefactorings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRenameAttributeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRenameFeatureAccess().getAllRefactoringsRenameAttributeParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RenameFeature_AllRefactoringsAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new RenameFeature_AllRefactoringsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new RenameFeature_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allRefactorings+=RenameMethod*
protected class RenameFeature_AllRefactoringsAssignment_5 extends AssignmentToken  {
	
	public RenameFeature_AllRefactoringsAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameFeatureAccess().getAllRefactoringsAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameMethod_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allRefactorings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allRefactorings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRenameMethodRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getRenameFeatureAccess().getAllRefactoringsRenameMethodParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new RenameFeature_AllRefactoringsAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new RenameFeature_AllRefactoringsAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new RenameFeature_AllRefactoringsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new RenameFeature_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class RenameFeature_RightCurlyBracketKeyword_6 extends KeywordToken  {
	
	public RenameFeature_RightCurlyBracketKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameFeatureAccess().getRightCurlyBracketKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameFeature_AllRefactoringsAssignment_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new RenameFeature_AllRefactoringsAssignment_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new RenameFeature_AllRefactoringsAssignment_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new RenameFeature_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}


/************ end Rule RenameFeature ****************/


/************ begin Rule RenameClass ****************
 *
 * RenameClass:
 * 	"Refactoring_RenameClass" name=ID "{" "classToBeRename" ":" classToBeRename=[Class] "newName" ":" newName=ID "}";
 *
 **/

// "Refactoring_RenameClass" name=ID "{" "classToBeRename" ":" classToBeRename=[Class] "newName" ":" newName=ID "}"
protected class RenameClass_Group extends GroupToken {
	
	public RenameClass_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRenameClassAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameClass_RightCurlyBracketKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRenameClassRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Refactoring_RenameClass"
protected class RenameClass_Refactoring_RenameClassKeyword_0 extends KeywordToken  {
	
	public RenameClass_Refactoring_RenameClassKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameClassAccess().getRefactoring_RenameClassKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class RenameClass_NameAssignment_1 extends AssignmentToken  {
	
	public RenameClass_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameClassAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameClass_Refactoring_RenameClassKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRenameClassAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRenameClassAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class RenameClass_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public RenameClass_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameClassAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameClass_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "classToBeRename"
protected class RenameClass_ClassToBeRenameKeyword_3 extends KeywordToken  {
	
	public RenameClass_ClassToBeRenameKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameClassAccess().getClassToBeRenameKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameClass_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class RenameClass_ColonKeyword_4 extends KeywordToken  {
	
	public RenameClass_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameClassAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameClass_ClassToBeRenameKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// classToBeRename=[Class]
protected class RenameClass_ClassToBeRenameAssignment_5 extends AssignmentToken  {
	
	public RenameClass_ClassToBeRenameAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameClassAccess().getClassToBeRenameAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameClass_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("classToBeRename",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("classToBeRename");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRenameClassAccess().getClassToBeRenameClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getRenameClassAccess().getClassToBeRenameClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "newName"
protected class RenameClass_NewNameKeyword_6 extends KeywordToken  {
	
	public RenameClass_NewNameKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameClassAccess().getNewNameKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameClass_ClassToBeRenameAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class RenameClass_ColonKeyword_7 extends KeywordToken  {
	
	public RenameClass_ColonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameClassAccess().getColonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameClass_NewNameKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// newName=ID
protected class RenameClass_NewNameAssignment_8 extends AssignmentToken  {
	
	public RenameClass_NewNameAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameClassAccess().getNewNameAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameClass_ColonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("newName",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("newName");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRenameClassAccess().getNewNameIDTerminalRuleCall_8_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRenameClassAccess().getNewNameIDTerminalRuleCall_8_0();
			return obj;
		}
		return null;
	}

}

// "}"
protected class RenameClass_RightCurlyBracketKeyword_9 extends KeywordToken  {
	
	public RenameClass_RightCurlyBracketKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameClassAccess().getRightCurlyBracketKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameClass_NewNameAssignment_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule RenameClass ****************/


/************ begin Rule RenameAttribute ****************
 *
 * RenameAttribute:
 * 	"Refactiong_RenameAttribute" name=ID "{" "sourceClass" ":" sourceClass=[Class] "attributeToBeRename" ":"
 * 	attributeToBeRename=[Attribute] "newName" ":" newName=ID "}";
 *
 **/

// "Refactiong_RenameAttribute" name=ID "{" "sourceClass" ":" sourceClass=[Class] "attributeToBeRename" ":"
// attributeToBeRename=[Attribute] "newName" ":" newName=ID "}"
protected class RenameAttribute_Group extends GroupToken {
	
	public RenameAttribute_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRenameAttributeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameAttribute_RightCurlyBracketKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRenameAttributeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Refactiong_RenameAttribute"
protected class RenameAttribute_Refactiong_RenameAttributeKeyword_0 extends KeywordToken  {
	
	public RenameAttribute_Refactiong_RenameAttributeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameAttributeAccess().getRefactiong_RenameAttributeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class RenameAttribute_NameAssignment_1 extends AssignmentToken  {
	
	public RenameAttribute_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameAttributeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameAttribute_Refactiong_RenameAttributeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRenameAttributeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRenameAttributeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class RenameAttribute_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public RenameAttribute_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameAttributeAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameAttribute_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sourceClass"
protected class RenameAttribute_SourceClassKeyword_3 extends KeywordToken  {
	
	public RenameAttribute_SourceClassKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameAttributeAccess().getSourceClassKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameAttribute_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class RenameAttribute_ColonKeyword_4 extends KeywordToken  {
	
	public RenameAttribute_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameAttributeAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameAttribute_SourceClassKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceClass=[Class]
protected class RenameAttribute_SourceClassAssignment_5 extends AssignmentToken  {
	
	public RenameAttribute_SourceClassAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameAttributeAccess().getSourceClassAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameAttribute_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRenameAttributeAccess().getSourceClassClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getRenameAttributeAccess().getSourceClassClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "attributeToBeRename"
protected class RenameAttribute_AttributeToBeRenameKeyword_6 extends KeywordToken  {
	
	public RenameAttribute_AttributeToBeRenameKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameAttributeAccess().getAttributeToBeRenameKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameAttribute_SourceClassAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class RenameAttribute_ColonKeyword_7 extends KeywordToken  {
	
	public RenameAttribute_ColonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameAttributeAccess().getColonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameAttribute_AttributeToBeRenameKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// attributeToBeRename=[Attribute]
protected class RenameAttribute_AttributeToBeRenameAssignment_8 extends AssignmentToken  {
	
	public RenameAttribute_AttributeToBeRenameAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameAttributeAccess().getAttributeToBeRenameAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameAttribute_ColonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributeToBeRename",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributeToBeRename");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRenameAttributeAccess().getAttributeToBeRenameAttributeCrossReference_8_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getRenameAttributeAccess().getAttributeToBeRenameAttributeCrossReference_8_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "newName"
protected class RenameAttribute_NewNameKeyword_9 extends KeywordToken  {
	
	public RenameAttribute_NewNameKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameAttributeAccess().getNewNameKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameAttribute_AttributeToBeRenameAssignment_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class RenameAttribute_ColonKeyword_10 extends KeywordToken  {
	
	public RenameAttribute_ColonKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameAttributeAccess().getColonKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameAttribute_NewNameKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// newName=ID
protected class RenameAttribute_NewNameAssignment_11 extends AssignmentToken  {
	
	public RenameAttribute_NewNameAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameAttributeAccess().getNewNameAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameAttribute_ColonKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("newName",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("newName");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRenameAttributeAccess().getNewNameIDTerminalRuleCall_11_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRenameAttributeAccess().getNewNameIDTerminalRuleCall_11_0();
			return obj;
		}
		return null;
	}

}

// "}"
protected class RenameAttribute_RightCurlyBracketKeyword_12 extends KeywordToken  {
	
	public RenameAttribute_RightCurlyBracketKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameAttributeAccess().getRightCurlyBracketKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameAttribute_NewNameAssignment_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule RenameAttribute ****************/


/************ begin Rule RenameMethod ****************
 *
 * RenameMethod:
 * 	"Refactoring_RenameMethod" name=ID "{" "sourceClass" ":" sourceClass=[Class] "methodToBeRename" ":"
 * 	methodToBeRename=[Method] "newName" ":" newName=ID "}";
 *
 **/

// "Refactoring_RenameMethod" name=ID "{" "sourceClass" ":" sourceClass=[Class] "methodToBeRename" ":"
// methodToBeRename=[Method] "newName" ":" newName=ID "}"
protected class RenameMethod_Group extends GroupToken {
	
	public RenameMethod_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRenameMethodAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameMethod_RightCurlyBracketKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRenameMethodRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Refactoring_RenameMethod"
protected class RenameMethod_Refactoring_RenameMethodKeyword_0 extends KeywordToken  {
	
	public RenameMethod_Refactoring_RenameMethodKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameMethodAccess().getRefactoring_RenameMethodKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class RenameMethod_NameAssignment_1 extends AssignmentToken  {
	
	public RenameMethod_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameMethodAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameMethod_Refactoring_RenameMethodKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRenameMethodAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRenameMethodAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class RenameMethod_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public RenameMethod_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameMethodAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameMethod_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sourceClass"
protected class RenameMethod_SourceClassKeyword_3 extends KeywordToken  {
	
	public RenameMethod_SourceClassKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameMethodAccess().getSourceClassKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameMethod_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class RenameMethod_ColonKeyword_4 extends KeywordToken  {
	
	public RenameMethod_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameMethodAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameMethod_SourceClassKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceClass=[Class]
protected class RenameMethod_SourceClassAssignment_5 extends AssignmentToken  {
	
	public RenameMethod_SourceClassAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameMethodAccess().getSourceClassAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameMethod_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRenameMethodAccess().getSourceClassClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getRenameMethodAccess().getSourceClassClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "methodToBeRename"
protected class RenameMethod_MethodToBeRenameKeyword_6 extends KeywordToken  {
	
	public RenameMethod_MethodToBeRenameKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameMethodAccess().getMethodToBeRenameKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameMethod_SourceClassAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class RenameMethod_ColonKeyword_7 extends KeywordToken  {
	
	public RenameMethod_ColonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameMethodAccess().getColonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameMethod_MethodToBeRenameKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// methodToBeRename=[Method]
protected class RenameMethod_MethodToBeRenameAssignment_8 extends AssignmentToken  {
	
	public RenameMethod_MethodToBeRenameAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameMethodAccess().getMethodToBeRenameAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameMethod_ColonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("methodToBeRename",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("methodToBeRename");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getRenameMethodAccess().getMethodToBeRenameMethodCrossReference_8_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getRenameMethodAccess().getMethodToBeRenameMethodCrossReference_8_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "newName"
protected class RenameMethod_NewNameKeyword_9 extends KeywordToken  {
	
	public RenameMethod_NewNameKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameMethodAccess().getNewNameKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameMethod_MethodToBeRenameAssignment_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class RenameMethod_ColonKeyword_10 extends KeywordToken  {
	
	public RenameMethod_ColonKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameMethodAccess().getColonKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameMethod_NewNameKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// newName=ID
protected class RenameMethod_NewNameAssignment_11 extends AssignmentToken  {
	
	public RenameMethod_NewNameAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRenameMethodAccess().getNewNameAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameMethod_ColonKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("newName",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("newName");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRenameMethodAccess().getNewNameIDTerminalRuleCall_11_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getRenameMethodAccess().getNewNameIDTerminalRuleCall_11_0();
			return obj;
		}
		return null;
	}

}

// "}"
protected class RenameMethod_RightCurlyBracketKeyword_12 extends KeywordToken  {
	
	public RenameMethod_RightCurlyBracketKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRenameMethodAccess().getRightCurlyBracketKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RenameMethod_NewNameAssignment_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule RenameMethod ****************/


/************ begin Rule MovingFeaturesBetweenObjects ****************
 *
 * MovingFeaturesBetweenObjects:
 * 	"MovingFeaturesBetweenObjects" name=ID "{" allRefactorings+=MoveAttribute* allRefactorings+=MoveMethod*
 * 	allRefactorings+=ExtractClass* allRefactorings+=InlineClass* "}";
 *
 **/

// "MovingFeaturesBetweenObjects" name=ID "{" allRefactorings+=MoveAttribute* allRefactorings+=MoveMethod*
// allRefactorings+=ExtractClass* allRefactorings+=InlineClass* "}"
protected class MovingFeaturesBetweenObjects_Group extends GroupToken {
	
	public MovingFeaturesBetweenObjects_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMovingFeaturesBetweenObjectsAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MovingFeaturesBetweenObjects_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMovingFeaturesBetweenObjectsRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "MovingFeaturesBetweenObjects"
protected class MovingFeaturesBetweenObjects_MovingFeaturesBetweenObjectsKeyword_0 extends KeywordToken  {
	
	public MovingFeaturesBetweenObjects_MovingFeaturesBetweenObjectsKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMovingFeaturesBetweenObjectsAccess().getMovingFeaturesBetweenObjectsKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class MovingFeaturesBetweenObjects_NameAssignment_1 extends AssignmentToken  {
	
	public MovingFeaturesBetweenObjects_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMovingFeaturesBetweenObjectsAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MovingFeaturesBetweenObjects_MovingFeaturesBetweenObjectsKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMovingFeaturesBetweenObjectsAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMovingFeaturesBetweenObjectsAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class MovingFeaturesBetweenObjects_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public MovingFeaturesBetweenObjects_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMovingFeaturesBetweenObjectsAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MovingFeaturesBetweenObjects_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// allRefactorings+=MoveAttribute*
protected class MovingFeaturesBetweenObjects_AllRefactoringsAssignment_3 extends AssignmentToken  {
	
	public MovingFeaturesBetweenObjects_AllRefactoringsAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMovingFeaturesBetweenObjectsAccess().getAllRefactoringsAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveAttribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allRefactorings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allRefactorings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMoveAttributeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMovingFeaturesBetweenObjectsAccess().getAllRefactoringsMoveAttributeParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MovingFeaturesBetweenObjects_AllRefactoringsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MovingFeaturesBetweenObjects_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allRefactorings+=MoveMethod*
protected class MovingFeaturesBetweenObjects_AllRefactoringsAssignment_4 extends AssignmentToken  {
	
	public MovingFeaturesBetweenObjects_AllRefactoringsAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMovingFeaturesBetweenObjectsAccess().getAllRefactoringsAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveMethod_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allRefactorings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allRefactorings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMoveMethodRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMovingFeaturesBetweenObjectsAccess().getAllRefactoringsMoveMethodParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MovingFeaturesBetweenObjects_AllRefactoringsAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MovingFeaturesBetweenObjects_AllRefactoringsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new MovingFeaturesBetweenObjects_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allRefactorings+=ExtractClass*
protected class MovingFeaturesBetweenObjects_AllRefactoringsAssignment_5 extends AssignmentToken  {
	
	public MovingFeaturesBetweenObjects_AllRefactoringsAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMovingFeaturesBetweenObjectsAccess().getAllRefactoringsAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allRefactorings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allRefactorings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExtractClassRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMovingFeaturesBetweenObjectsAccess().getAllRefactoringsExtractClassParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MovingFeaturesBetweenObjects_AllRefactoringsAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MovingFeaturesBetweenObjects_AllRefactoringsAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new MovingFeaturesBetweenObjects_AllRefactoringsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new MovingFeaturesBetweenObjects_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allRefactorings+=InlineClass*
protected class MovingFeaturesBetweenObjects_AllRefactoringsAssignment_6 extends AssignmentToken  {
	
	public MovingFeaturesBetweenObjects_AllRefactoringsAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMovingFeaturesBetweenObjectsAccess().getAllRefactoringsAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineClass_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allRefactorings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allRefactorings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInlineClassRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getMovingFeaturesBetweenObjectsAccess().getAllRefactoringsInlineClassParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new MovingFeaturesBetweenObjects_AllRefactoringsAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new MovingFeaturesBetweenObjects_AllRefactoringsAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new MovingFeaturesBetweenObjects_AllRefactoringsAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new MovingFeaturesBetweenObjects_AllRefactoringsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new MovingFeaturesBetweenObjects_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class MovingFeaturesBetweenObjects_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public MovingFeaturesBetweenObjects_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMovingFeaturesBetweenObjectsAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MovingFeaturesBetweenObjects_AllRefactoringsAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MovingFeaturesBetweenObjects_AllRefactoringsAssignment_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new MovingFeaturesBetweenObjects_AllRefactoringsAssignment_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new MovingFeaturesBetweenObjects_AllRefactoringsAssignment_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new MovingFeaturesBetweenObjects_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule MovingFeaturesBetweenObjects ****************/


/************ begin Rule MoveAttribute ****************
 *
 * MoveAttribute:
 * 	"Refactoring_MoveAttribute" name=ID "{" "sourceClass" ":" sourceClass=[Class] "targetClass" ":" targetClass=[Class]
 * 	"attributeToBeMoved" ":" attributeToBeMoved=[Attribute] "}";
 *
 **/

// "Refactoring_MoveAttribute" name=ID "{" "sourceClass" ":" sourceClass=[Class] "targetClass" ":" targetClass=[Class]
// "attributeToBeMoved" ":" attributeToBeMoved=[Attribute] "}"
protected class MoveAttribute_Group extends GroupToken {
	
	public MoveAttribute_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMoveAttributeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveAttribute_RightCurlyBracketKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMoveAttributeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Refactoring_MoveAttribute"
protected class MoveAttribute_Refactoring_MoveAttributeKeyword_0 extends KeywordToken  {
	
	public MoveAttribute_Refactoring_MoveAttributeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveAttributeAccess().getRefactoring_MoveAttributeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class MoveAttribute_NameAssignment_1 extends AssignmentToken  {
	
	public MoveAttribute_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMoveAttributeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveAttribute_Refactoring_MoveAttributeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMoveAttributeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMoveAttributeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class MoveAttribute_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public MoveAttribute_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveAttributeAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveAttribute_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sourceClass"
protected class MoveAttribute_SourceClassKeyword_3 extends KeywordToken  {
	
	public MoveAttribute_SourceClassKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveAttributeAccess().getSourceClassKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveAttribute_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class MoveAttribute_ColonKeyword_4 extends KeywordToken  {
	
	public MoveAttribute_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveAttributeAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveAttribute_SourceClassKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceClass=[Class]
protected class MoveAttribute_SourceClassAssignment_5 extends AssignmentToken  {
	
	public MoveAttribute_SourceClassAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMoveAttributeAccess().getSourceClassAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveAttribute_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMoveAttributeAccess().getSourceClassClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMoveAttributeAccess().getSourceClassClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "targetClass"
protected class MoveAttribute_TargetClassKeyword_6 extends KeywordToken  {
	
	public MoveAttribute_TargetClassKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveAttributeAccess().getTargetClassKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveAttribute_SourceClassAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class MoveAttribute_ColonKeyword_7 extends KeywordToken  {
	
	public MoveAttribute_ColonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveAttributeAccess().getColonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveAttribute_TargetClassKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// targetClass=[Class]
protected class MoveAttribute_TargetClassAssignment_8 extends AssignmentToken  {
	
	public MoveAttribute_TargetClassAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMoveAttributeAccess().getTargetClassAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveAttribute_ColonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("targetClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("targetClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMoveAttributeAccess().getTargetClassClassCrossReference_8_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMoveAttributeAccess().getTargetClassClassCrossReference_8_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "attributeToBeMoved"
protected class MoveAttribute_AttributeToBeMovedKeyword_9 extends KeywordToken  {
	
	public MoveAttribute_AttributeToBeMovedKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveAttributeAccess().getAttributeToBeMovedKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveAttribute_TargetClassAssignment_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class MoveAttribute_ColonKeyword_10 extends KeywordToken  {
	
	public MoveAttribute_ColonKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveAttributeAccess().getColonKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveAttribute_AttributeToBeMovedKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// attributeToBeMoved=[Attribute]
protected class MoveAttribute_AttributeToBeMovedAssignment_11 extends AssignmentToken  {
	
	public MoveAttribute_AttributeToBeMovedAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMoveAttributeAccess().getAttributeToBeMovedAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveAttribute_ColonKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributeToBeMoved",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributeToBeMoved");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMoveAttributeAccess().getAttributeToBeMovedAttributeCrossReference_11_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMoveAttributeAccess().getAttributeToBeMovedAttributeCrossReference_11_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class MoveAttribute_RightCurlyBracketKeyword_12 extends KeywordToken  {
	
	public MoveAttribute_RightCurlyBracketKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveAttributeAccess().getRightCurlyBracketKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveAttribute_AttributeToBeMovedAssignment_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule MoveAttribute ****************/


/************ begin Rule MoveMethod ****************
 *
 * MoveMethod:
 * 	"Refactoring_MoveMethod" name=ID "{" "sourceClass" ":" sourceClass=[Class] "targetClass" ":" targetClass=[Class]
 * 	"methodToBeMoved" ":" methodToBeMoved=[Method] "}";
 *
 **/

// "Refactoring_MoveMethod" name=ID "{" "sourceClass" ":" sourceClass=[Class] "targetClass" ":" targetClass=[Class]
// "methodToBeMoved" ":" methodToBeMoved=[Method] "}"
protected class MoveMethod_Group extends GroupToken {
	
	public MoveMethod_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMoveMethodAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveMethod_RightCurlyBracketKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMoveMethodRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Refactoring_MoveMethod"
protected class MoveMethod_Refactoring_MoveMethodKeyword_0 extends KeywordToken  {
	
	public MoveMethod_Refactoring_MoveMethodKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveMethodAccess().getRefactoring_MoveMethodKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class MoveMethod_NameAssignment_1 extends AssignmentToken  {
	
	public MoveMethod_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMoveMethodAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveMethod_Refactoring_MoveMethodKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMoveMethodAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getMoveMethodAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class MoveMethod_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public MoveMethod_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveMethodAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveMethod_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sourceClass"
protected class MoveMethod_SourceClassKeyword_3 extends KeywordToken  {
	
	public MoveMethod_SourceClassKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveMethodAccess().getSourceClassKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveMethod_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class MoveMethod_ColonKeyword_4 extends KeywordToken  {
	
	public MoveMethod_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveMethodAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveMethod_SourceClassKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceClass=[Class]
protected class MoveMethod_SourceClassAssignment_5 extends AssignmentToken  {
	
	public MoveMethod_SourceClassAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMoveMethodAccess().getSourceClassAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveMethod_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMoveMethodAccess().getSourceClassClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMoveMethodAccess().getSourceClassClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "targetClass"
protected class MoveMethod_TargetClassKeyword_6 extends KeywordToken  {
	
	public MoveMethod_TargetClassKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveMethodAccess().getTargetClassKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveMethod_SourceClassAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class MoveMethod_ColonKeyword_7 extends KeywordToken  {
	
	public MoveMethod_ColonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveMethodAccess().getColonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveMethod_TargetClassKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// targetClass=[Class]
protected class MoveMethod_TargetClassAssignment_8 extends AssignmentToken  {
	
	public MoveMethod_TargetClassAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMoveMethodAccess().getTargetClassAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveMethod_ColonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("targetClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("targetClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMoveMethodAccess().getTargetClassClassCrossReference_8_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMoveMethodAccess().getTargetClassClassCrossReference_8_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "methodToBeMoved"
protected class MoveMethod_MethodToBeMovedKeyword_9 extends KeywordToken  {
	
	public MoveMethod_MethodToBeMovedKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveMethodAccess().getMethodToBeMovedKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveMethod_TargetClassAssignment_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class MoveMethod_ColonKeyword_10 extends KeywordToken  {
	
	public MoveMethod_ColonKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveMethodAccess().getColonKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveMethod_MethodToBeMovedKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// methodToBeMoved=[Method]
protected class MoveMethod_MethodToBeMovedAssignment_11 extends AssignmentToken  {
	
	public MoveMethod_MethodToBeMovedAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMoveMethodAccess().getMethodToBeMovedAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveMethod_ColonKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("methodToBeMoved",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("methodToBeMoved");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMoveMethodAccess().getMethodToBeMovedMethodCrossReference_11_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getMoveMethodAccess().getMethodToBeMovedMethodCrossReference_11_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class MoveMethod_RightCurlyBracketKeyword_12 extends KeywordToken  {
	
	public MoveMethod_RightCurlyBracketKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMoveMethodAccess().getRightCurlyBracketKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MoveMethod_MethodToBeMovedAssignment_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule MoveMethod ****************/


/************ begin Rule ExtractClass ****************
 *
 * ExtractClass:
 * 	"Refactoring_ExtractClass" name=ID "{" "sourceClass" ":" sourceClass=[Class] "attribute(s)ToBeMoved" ":" "{"
 * 	attributesToBeMoved+=[Attribute] ("," attributesToBeMoved+=[Attribute])* "}" "nameToTheNewClass" ":" newName=ID "}";
 *
 **/

// "Refactoring_ExtractClass" name=ID "{" "sourceClass" ":" sourceClass=[Class] "attribute(s)ToBeMoved" ":" "{"
// attributesToBeMoved+=[Attribute] ("," attributesToBeMoved+=[Attribute])* "}" "nameToTheNewClass" ":" newName=ID "}"
protected class ExtractClass_Group extends GroupToken {
	
	public ExtractClass_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_RightCurlyBracketKeyword_15(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getExtractClassRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Refactoring_ExtractClass"
protected class ExtractClass_Refactoring_ExtractClassKeyword_0 extends KeywordToken  {
	
	public ExtractClass_Refactoring_ExtractClassKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getRefactoring_ExtractClassKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class ExtractClass_NameAssignment_1 extends AssignmentToken  {
	
	public ExtractClass_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_Refactoring_ExtractClassKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getExtractClassAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getExtractClassAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class ExtractClass_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public ExtractClass_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sourceClass"
protected class ExtractClass_SourceClassKeyword_3 extends KeywordToken  {
	
	public ExtractClass_SourceClassKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getSourceClassKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class ExtractClass_ColonKeyword_4 extends KeywordToken  {
	
	public ExtractClass_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_SourceClassKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceClass=[Class]
protected class ExtractClass_SourceClassAssignment_5 extends AssignmentToken  {
	
	public ExtractClass_SourceClassAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getSourceClassAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExtractClassAccess().getSourceClassClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getExtractClassAccess().getSourceClassClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "attribute(s)ToBeMoved"
protected class ExtractClass_AttributeSToBeMovedKeyword_6 extends KeywordToken  {
	
	public ExtractClass_AttributeSToBeMovedKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getAttributeSToBeMovedKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_SourceClassAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class ExtractClass_ColonKeyword_7 extends KeywordToken  {
	
	public ExtractClass_ColonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getColonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_AttributeSToBeMovedKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class ExtractClass_LeftCurlyBracketKeyword_8 extends KeywordToken  {
	
	public ExtractClass_LeftCurlyBracketKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getLeftCurlyBracketKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_ColonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// attributesToBeMoved+=[Attribute]
protected class ExtractClass_AttributesToBeMovedAssignment_9 extends AssignmentToken  {
	
	public ExtractClass_AttributesToBeMovedAssignment_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getAttributesToBeMovedAssignment_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_LeftCurlyBracketKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributesToBeMoved",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributesToBeMoved");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExtractClassAccess().getAttributesToBeMovedAttributeCrossReference_9_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getExtractClassAccess().getAttributesToBeMovedAttributeCrossReference_9_0(); 
				return obj;
			}
		}
		return null;
	}

}

// ("," attributesToBeMoved+=[Attribute])*
protected class ExtractClass_Group_10 extends GroupToken {
	
	public ExtractClass_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_AttributesToBeMovedAssignment_10_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class ExtractClass_CommaKeyword_10_0 extends KeywordToken  {
	
	public ExtractClass_CommaKeyword_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getCommaKeyword_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_Group_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ExtractClass_AttributesToBeMovedAssignment_9(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// attributesToBeMoved+=[Attribute]
protected class ExtractClass_AttributesToBeMovedAssignment_10_1 extends AssignmentToken  {
	
	public ExtractClass_AttributesToBeMovedAssignment_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getAttributesToBeMovedAssignment_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_CommaKeyword_10_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributesToBeMoved",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributesToBeMoved");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getExtractClassAccess().getAttributesToBeMovedAttributeCrossReference_10_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getExtractClassAccess().getAttributesToBeMovedAttributeCrossReference_10_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// "}"
protected class ExtractClass_RightCurlyBracketKeyword_11 extends KeywordToken  {
	
	public ExtractClass_RightCurlyBracketKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getRightCurlyBracketKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_Group_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ExtractClass_AttributesToBeMovedAssignment_9(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "nameToTheNewClass"
protected class ExtractClass_NameToTheNewClassKeyword_12 extends KeywordToken  {
	
	public ExtractClass_NameToTheNewClassKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getNameToTheNewClassKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_RightCurlyBracketKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class ExtractClass_ColonKeyword_13 extends KeywordToken  {
	
	public ExtractClass_ColonKeyword_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getColonKeyword_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_NameToTheNewClassKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// newName=ID
protected class ExtractClass_NewNameAssignment_14 extends AssignmentToken  {
	
	public ExtractClass_NewNameAssignment_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getNewNameAssignment_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_ColonKeyword_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("newName",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("newName");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getExtractClassAccess().getNewNameIDTerminalRuleCall_14_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getExtractClassAccess().getNewNameIDTerminalRuleCall_14_0();
			return obj;
		}
		return null;
	}

}

// "}"
protected class ExtractClass_RightCurlyBracketKeyword_15 extends KeywordToken  {
	
	public ExtractClass_RightCurlyBracketKeyword_15(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getExtractClassAccess().getRightCurlyBracketKeyword_15();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ExtractClass_NewNameAssignment_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ExtractClass ****************/


/************ begin Rule InlineClass ****************
 *
 * InlineClass:
 * 	"Refactoring_InlineClass" name=ID "{" "classToGetAllFeatures" ":" classToGetAllFeatures=[Class] "classToRemove" ":"
 * 	classToRemove=[Class] "}";
 *
 **/

// "Refactoring_InlineClass" name=ID "{" "classToGetAllFeatures" ":" classToGetAllFeatures=[Class] "classToRemove" ":"
// classToRemove=[Class] "}"
protected class InlineClass_Group extends GroupToken {
	
	public InlineClass_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInlineClassAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineClass_RightCurlyBracketKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInlineClassRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Refactoring_InlineClass"
protected class InlineClass_Refactoring_InlineClassKeyword_0 extends KeywordToken  {
	
	public InlineClass_Refactoring_InlineClassKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineClassAccess().getRefactoring_InlineClassKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class InlineClass_NameAssignment_1 extends AssignmentToken  {
	
	public InlineClass_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInlineClassAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineClass_Refactoring_InlineClassKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInlineClassAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getInlineClassAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class InlineClass_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public InlineClass_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineClassAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineClass_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "classToGetAllFeatures"
protected class InlineClass_ClassToGetAllFeaturesKeyword_3 extends KeywordToken  {
	
	public InlineClass_ClassToGetAllFeaturesKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineClassAccess().getClassToGetAllFeaturesKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineClass_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class InlineClass_ColonKeyword_4 extends KeywordToken  {
	
	public InlineClass_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineClassAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineClass_ClassToGetAllFeaturesKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// classToGetAllFeatures=[Class]
protected class InlineClass_ClassToGetAllFeaturesAssignment_5 extends AssignmentToken  {
	
	public InlineClass_ClassToGetAllFeaturesAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInlineClassAccess().getClassToGetAllFeaturesAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineClass_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("classToGetAllFeatures",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("classToGetAllFeatures");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInlineClassAccess().getClassToGetAllFeaturesClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getInlineClassAccess().getClassToGetAllFeaturesClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "classToRemove"
protected class InlineClass_ClassToRemoveKeyword_6 extends KeywordToken  {
	
	public InlineClass_ClassToRemoveKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineClassAccess().getClassToRemoveKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineClass_ClassToGetAllFeaturesAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class InlineClass_ColonKeyword_7 extends KeywordToken  {
	
	public InlineClass_ColonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineClassAccess().getColonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineClass_ClassToRemoveKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// classToRemove=[Class]
protected class InlineClass_ClassToRemoveAssignment_8 extends AssignmentToken  {
	
	public InlineClass_ClassToRemoveAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInlineClassAccess().getClassToRemoveAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineClass_ColonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("classToRemove",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("classToRemove");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInlineClassAccess().getClassToRemoveClassCrossReference_8_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getInlineClassAccess().getClassToRemoveClassCrossReference_8_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class InlineClass_RightCurlyBracketKeyword_9 extends KeywordToken  {
	
	public InlineClass_RightCurlyBracketKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInlineClassAccess().getRightCurlyBracketKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InlineClass_ClassToRemoveAssignment_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule InlineClass ****************/


/************ begin Rule OrganizingData ****************
 *
 * OrganizingData:
 * 	"OrganizingData" name=ID "{" allRefactorings+=ReplaceDataValueWithObject* allRefactorings+=EncapsulateField* "}";
 *
 **/

// "OrganizingData" name=ID "{" allRefactorings+=ReplaceDataValueWithObject* allRefactorings+=EncapsulateField* "}"
protected class OrganizingData_Group extends GroupToken {
	
	public OrganizingData_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getOrganizingDataAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrganizingData_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getOrganizingDataRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "OrganizingData"
protected class OrganizingData_OrganizingDataKeyword_0 extends KeywordToken  {
	
	public OrganizingData_OrganizingDataKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOrganizingDataAccess().getOrganizingDataKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class OrganizingData_NameAssignment_1 extends AssignmentToken  {
	
	public OrganizingData_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOrganizingDataAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrganizingData_OrganizingDataKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getOrganizingDataAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getOrganizingDataAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class OrganizingData_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public OrganizingData_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOrganizingDataAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrganizingData_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// allRefactorings+=ReplaceDataValueWithObject*
protected class OrganizingData_AllRefactoringsAssignment_3 extends AssignmentToken  {
	
	public OrganizingData_AllRefactoringsAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOrganizingDataAccess().getAllRefactoringsAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allRefactorings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allRefactorings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReplaceDataValueWithObjectRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOrganizingDataAccess().getAllRefactoringsReplaceDataValueWithObjectParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OrganizingData_AllRefactoringsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new OrganizingData_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allRefactorings+=EncapsulateField*
protected class OrganizingData_AllRefactoringsAssignment_4 extends AssignmentToken  {
	
	public OrganizingData_AllRefactoringsAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getOrganizingDataAccess().getAllRefactoringsAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncapsulateField_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allRefactorings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allRefactorings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEncapsulateFieldRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getOrganizingDataAccess().getAllRefactoringsEncapsulateFieldParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new OrganizingData_AllRefactoringsAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new OrganizingData_AllRefactoringsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new OrganizingData_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class OrganizingData_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public OrganizingData_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getOrganizingDataAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new OrganizingData_AllRefactoringsAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new OrganizingData_AllRefactoringsAssignment_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new OrganizingData_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule OrganizingData ****************/


/************ begin Rule ReplaceDataValueWithObject ****************
 *
 * ReplaceDataValueWithObject:
 * 	"Refactoring_ReplaceDataValueWithObject" name=ID "{" "sourceClass" ":" sourceClass=[Class]
 * 	"attributeToReplaceDataWithObject" ":" attributeToReplaceDataWithObject=[Attribute] "newAttributes" ":" "{"
 * 	newAttributes+=Attribute* "}" //		'newAttributes' ':' newAttributes = Attribute
 * 	"}";
 *
 **/

// "Refactoring_ReplaceDataValueWithObject" name=ID "{" "sourceClass" ":" sourceClass=[Class]
// "attributeToReplaceDataWithObject" ":" attributeToReplaceDataWithObject=[Attribute] "newAttributes" ":" "{"
// newAttributes+=Attribute* "}" //		'newAttributes' ':' newAttributes = Attribute
// "}"
protected class ReplaceDataValueWithObject_Group extends GroupToken {
	
	public ReplaceDataValueWithObject_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_RightCurlyBracketKeyword_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getReplaceDataValueWithObjectRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Refactoring_ReplaceDataValueWithObject"
protected class ReplaceDataValueWithObject_Refactoring_ReplaceDataValueWithObjectKeyword_0 extends KeywordToken  {
	
	public ReplaceDataValueWithObject_Refactoring_ReplaceDataValueWithObjectKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getRefactoring_ReplaceDataValueWithObjectKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class ReplaceDataValueWithObject_NameAssignment_1 extends AssignmentToken  {
	
	public ReplaceDataValueWithObject_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_Refactoring_ReplaceDataValueWithObjectKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getReplaceDataValueWithObjectAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getReplaceDataValueWithObjectAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class ReplaceDataValueWithObject_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public ReplaceDataValueWithObject_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sourceClass"
protected class ReplaceDataValueWithObject_SourceClassKeyword_3 extends KeywordToken  {
	
	public ReplaceDataValueWithObject_SourceClassKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getSourceClassKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class ReplaceDataValueWithObject_ColonKeyword_4 extends KeywordToken  {
	
	public ReplaceDataValueWithObject_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_SourceClassKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceClass=[Class]
protected class ReplaceDataValueWithObject_SourceClassAssignment_5 extends AssignmentToken  {
	
	public ReplaceDataValueWithObject_SourceClassAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getSourceClassAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReplaceDataValueWithObjectAccess().getSourceClassClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getReplaceDataValueWithObjectAccess().getSourceClassClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "attributeToReplaceDataWithObject"
protected class ReplaceDataValueWithObject_AttributeToReplaceDataWithObjectKeyword_6 extends KeywordToken  {
	
	public ReplaceDataValueWithObject_AttributeToReplaceDataWithObjectKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getAttributeToReplaceDataWithObjectKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_SourceClassAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class ReplaceDataValueWithObject_ColonKeyword_7 extends KeywordToken  {
	
	public ReplaceDataValueWithObject_ColonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getColonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_AttributeToReplaceDataWithObjectKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// attributeToReplaceDataWithObject=[Attribute]
protected class ReplaceDataValueWithObject_AttributeToReplaceDataWithObjectAssignment_8 extends AssignmentToken  {
	
	public ReplaceDataValueWithObject_AttributeToReplaceDataWithObjectAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getAttributeToReplaceDataWithObjectAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_ColonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributeToReplaceDataWithObject",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributeToReplaceDataWithObject");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getReplaceDataValueWithObjectAccess().getAttributeToReplaceDataWithObjectAttributeCrossReference_8_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getReplaceDataValueWithObjectAccess().getAttributeToReplaceDataWithObjectAttributeCrossReference_8_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "newAttributes"
protected class ReplaceDataValueWithObject_NewAttributesKeyword_9 extends KeywordToken  {
	
	public ReplaceDataValueWithObject_NewAttributesKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getNewAttributesKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_AttributeToReplaceDataWithObjectAssignment_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class ReplaceDataValueWithObject_ColonKeyword_10 extends KeywordToken  {
	
	public ReplaceDataValueWithObject_ColonKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getColonKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_NewAttributesKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class ReplaceDataValueWithObject_LeftCurlyBracketKeyword_11 extends KeywordToken  {
	
	public ReplaceDataValueWithObject_LeftCurlyBracketKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getLeftCurlyBracketKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_ColonKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// newAttributes+=Attribute*
protected class ReplaceDataValueWithObject_NewAttributesAssignment_12 extends AssignmentToken  {
	
	public ReplaceDataValueWithObject_NewAttributesAssignment_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getNewAttributesAssignment_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Attribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("newAttributes",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("newAttributes");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAttributeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getReplaceDataValueWithObjectAccess().getNewAttributesAttributeParserRuleCall_12_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_NewAttributesAssignment_12(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ReplaceDataValueWithObject_LeftCurlyBracketKeyword_11(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class ReplaceDataValueWithObject_RightCurlyBracketKeyword_13 extends KeywordToken  {
	
	public ReplaceDataValueWithObject_RightCurlyBracketKeyword_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getRightCurlyBracketKeyword_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_NewAttributesAssignment_12(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ReplaceDataValueWithObject_LeftCurlyBracketKeyword_11(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// //		'newAttributes' ':' newAttributes = Attribute
// "}"
protected class ReplaceDataValueWithObject_RightCurlyBracketKeyword_14 extends KeywordToken  {
	
	public ReplaceDataValueWithObject_RightCurlyBracketKeyword_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getReplaceDataValueWithObjectAccess().getRightCurlyBracketKeyword_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReplaceDataValueWithObject_RightCurlyBracketKeyword_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule ReplaceDataValueWithObject ****************/


/************ begin Rule EncapsulateField ****************
 *
 * EncapsulateField:
 * 	"Refactoring_EncapsulateField" name=ID "{" "sourceClass" ":" sourceClass=[Class] "attributeToEncapsulate" ":"
 * 	attributeToEncapsulate=[Attribute] "}";
 *
 **/

// "Refactoring_EncapsulateField" name=ID "{" "sourceClass" ":" sourceClass=[Class] "attributeToEncapsulate" ":"
// attributeToEncapsulate=[Attribute] "}"
protected class EncapsulateField_Group extends GroupToken {
	
	public EncapsulateField_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getEncapsulateFieldAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncapsulateField_RightCurlyBracketKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getEncapsulateFieldRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Refactoring_EncapsulateField"
protected class EncapsulateField_Refactoring_EncapsulateFieldKeyword_0 extends KeywordToken  {
	
	public EncapsulateField_Refactoring_EncapsulateFieldKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEncapsulateFieldAccess().getRefactoring_EncapsulateFieldKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class EncapsulateField_NameAssignment_1 extends AssignmentToken  {
	
	public EncapsulateField_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEncapsulateFieldAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncapsulateField_Refactoring_EncapsulateFieldKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getEncapsulateFieldAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getEncapsulateFieldAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class EncapsulateField_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public EncapsulateField_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEncapsulateFieldAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncapsulateField_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sourceClass"
protected class EncapsulateField_SourceClassKeyword_3 extends KeywordToken  {
	
	public EncapsulateField_SourceClassKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEncapsulateFieldAccess().getSourceClassKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncapsulateField_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class EncapsulateField_ColonKeyword_4 extends KeywordToken  {
	
	public EncapsulateField_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEncapsulateFieldAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncapsulateField_SourceClassKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceClass=[Class]
protected class EncapsulateField_SourceClassAssignment_5 extends AssignmentToken  {
	
	public EncapsulateField_SourceClassAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEncapsulateFieldAccess().getSourceClassAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncapsulateField_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEncapsulateFieldAccess().getSourceClassClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEncapsulateFieldAccess().getSourceClassClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "attributeToEncapsulate"
protected class EncapsulateField_AttributeToEncapsulateKeyword_6 extends KeywordToken  {
	
	public EncapsulateField_AttributeToEncapsulateKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEncapsulateFieldAccess().getAttributeToEncapsulateKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncapsulateField_SourceClassAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class EncapsulateField_ColonKeyword_7 extends KeywordToken  {
	
	public EncapsulateField_ColonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEncapsulateFieldAccess().getColonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncapsulateField_AttributeToEncapsulateKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// attributeToEncapsulate=[Attribute]
protected class EncapsulateField_AttributeToEncapsulateAssignment_8 extends AssignmentToken  {
	
	public EncapsulateField_AttributeToEncapsulateAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getEncapsulateFieldAccess().getAttributeToEncapsulateAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncapsulateField_ColonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributeToEncapsulate",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributeToEncapsulate");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getEncapsulateFieldAccess().getAttributeToEncapsulateAttributeCrossReference_8_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getEncapsulateFieldAccess().getAttributeToEncapsulateAttributeCrossReference_8_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class EncapsulateField_RightCurlyBracketKeyword_9 extends KeywordToken  {
	
	public EncapsulateField_RightCurlyBracketKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getEncapsulateFieldAccess().getRightCurlyBracketKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new EncapsulateField_AttributeToEncapsulateAssignment_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule EncapsulateField ****************/


/************ begin Rule DealingWithGeneralization ****************
 *
 * DealingWithGeneralization:
 * 	"DealingWithGeneralization" name=ID "{" allRefactorings+=PushDownAttribute* allRefactorings+=PushDownMethod*
 * 	allRefactorings+=PullUpAttribute* allRefactorings+=PullUpMethod* "}";
 *
 **/

// "DealingWithGeneralization" name=ID "{" allRefactorings+=PushDownAttribute* allRefactorings+=PushDownMethod*
// allRefactorings+=PullUpAttribute* allRefactorings+=PullUpMethod* "}"
protected class DealingWithGeneralization_Group extends GroupToken {
	
	public DealingWithGeneralization_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDealingWithGeneralizationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DealingWithGeneralization_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDealingWithGeneralizationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "DealingWithGeneralization"
protected class DealingWithGeneralization_DealingWithGeneralizationKeyword_0 extends KeywordToken  {
	
	public DealingWithGeneralization_DealingWithGeneralizationKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDealingWithGeneralizationAccess().getDealingWithGeneralizationKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class DealingWithGeneralization_NameAssignment_1 extends AssignmentToken  {
	
	public DealingWithGeneralization_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDealingWithGeneralizationAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DealingWithGeneralization_DealingWithGeneralizationKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDealingWithGeneralizationAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getDealingWithGeneralizationAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class DealingWithGeneralization_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public DealingWithGeneralization_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDealingWithGeneralizationAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DealingWithGeneralization_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// allRefactorings+=PushDownAttribute*
protected class DealingWithGeneralization_AllRefactoringsAssignment_3 extends AssignmentToken  {
	
	public DealingWithGeneralization_AllRefactoringsAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDealingWithGeneralizationAccess().getAllRefactoringsAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownAttribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allRefactorings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allRefactorings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPushDownAttributeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDealingWithGeneralizationAccess().getAllRefactoringsPushDownAttributeParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DealingWithGeneralization_AllRefactoringsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DealingWithGeneralization_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allRefactorings+=PushDownMethod*
protected class DealingWithGeneralization_AllRefactoringsAssignment_4 extends AssignmentToken  {
	
	public DealingWithGeneralization_AllRefactoringsAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDealingWithGeneralizationAccess().getAllRefactoringsAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownMethod_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allRefactorings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allRefactorings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPushDownMethodRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDealingWithGeneralizationAccess().getAllRefactoringsPushDownMethodParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DealingWithGeneralization_AllRefactoringsAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DealingWithGeneralization_AllRefactoringsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new DealingWithGeneralization_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allRefactorings+=PullUpAttribute*
protected class DealingWithGeneralization_AllRefactoringsAssignment_5 extends AssignmentToken  {
	
	public DealingWithGeneralization_AllRefactoringsAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDealingWithGeneralizationAccess().getAllRefactoringsAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpAttribute_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allRefactorings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allRefactorings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPullUpAttributeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDealingWithGeneralizationAccess().getAllRefactoringsPullUpAttributeParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DealingWithGeneralization_AllRefactoringsAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DealingWithGeneralization_AllRefactoringsAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new DealingWithGeneralization_AllRefactoringsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new DealingWithGeneralization_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// allRefactorings+=PullUpMethod*
protected class DealingWithGeneralization_AllRefactoringsAssignment_6 extends AssignmentToken  {
	
	public DealingWithGeneralization_AllRefactoringsAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDealingWithGeneralizationAccess().getAllRefactoringsAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpMethod_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("allRefactorings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("allRefactorings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPullUpMethodRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getDealingWithGeneralizationAccess().getAllRefactoringsPullUpMethodParserRuleCall_6_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new DealingWithGeneralization_AllRefactoringsAssignment_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new DealingWithGeneralization_AllRefactoringsAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new DealingWithGeneralization_AllRefactoringsAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new DealingWithGeneralization_AllRefactoringsAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new DealingWithGeneralization_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class DealingWithGeneralization_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public DealingWithGeneralization_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDealingWithGeneralizationAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DealingWithGeneralization_AllRefactoringsAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DealingWithGeneralization_AllRefactoringsAssignment_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new DealingWithGeneralization_AllRefactoringsAssignment_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new DealingWithGeneralization_AllRefactoringsAssignment_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new DealingWithGeneralization_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule DealingWithGeneralization ****************/


/************ begin Rule PushDownAttribute ****************
 *
 * PushDownAttribute:
 * 	"Refactoring_PushDownAttribute" name=ID "{" "sourceClass" ":" sourceClass=[Class] "attributeToPushDown" ":"
 * 	attributeToBePushed=[Attribute] "targetClass" ":" targetClass=[Class] "}";
 *
 **/

// "Refactoring_PushDownAttribute" name=ID "{" "sourceClass" ":" sourceClass=[Class] "attributeToPushDown" ":"
// attributeToBePushed=[Attribute] "targetClass" ":" targetClass=[Class] "}"
protected class PushDownAttribute_Group extends GroupToken {
	
	public PushDownAttribute_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPushDownAttributeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownAttribute_RightCurlyBracketKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPushDownAttributeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Refactoring_PushDownAttribute"
protected class PushDownAttribute_Refactoring_PushDownAttributeKeyword_0 extends KeywordToken  {
	
	public PushDownAttribute_Refactoring_PushDownAttributeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownAttributeAccess().getRefactoring_PushDownAttributeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class PushDownAttribute_NameAssignment_1 extends AssignmentToken  {
	
	public PushDownAttribute_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPushDownAttributeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownAttribute_Refactoring_PushDownAttributeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPushDownAttributeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPushDownAttributeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class PushDownAttribute_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public PushDownAttribute_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownAttributeAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownAttribute_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sourceClass"
protected class PushDownAttribute_SourceClassKeyword_3 extends KeywordToken  {
	
	public PushDownAttribute_SourceClassKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownAttributeAccess().getSourceClassKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownAttribute_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class PushDownAttribute_ColonKeyword_4 extends KeywordToken  {
	
	public PushDownAttribute_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownAttributeAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownAttribute_SourceClassKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceClass=[Class]
protected class PushDownAttribute_SourceClassAssignment_5 extends AssignmentToken  {
	
	public PushDownAttribute_SourceClassAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPushDownAttributeAccess().getSourceClassAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownAttribute_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPushDownAttributeAccess().getSourceClassClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPushDownAttributeAccess().getSourceClassClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "attributeToPushDown"
protected class PushDownAttribute_AttributeToPushDownKeyword_6 extends KeywordToken  {
	
	public PushDownAttribute_AttributeToPushDownKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownAttributeAccess().getAttributeToPushDownKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownAttribute_SourceClassAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class PushDownAttribute_ColonKeyword_7 extends KeywordToken  {
	
	public PushDownAttribute_ColonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownAttributeAccess().getColonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownAttribute_AttributeToPushDownKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// attributeToBePushed=[Attribute]
protected class PushDownAttribute_AttributeToBePushedAssignment_8 extends AssignmentToken  {
	
	public PushDownAttribute_AttributeToBePushedAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPushDownAttributeAccess().getAttributeToBePushedAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownAttribute_ColonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributeToBePushed",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributeToBePushed");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPushDownAttributeAccess().getAttributeToBePushedAttributeCrossReference_8_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPushDownAttributeAccess().getAttributeToBePushedAttributeCrossReference_8_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "targetClass"
protected class PushDownAttribute_TargetClassKeyword_9 extends KeywordToken  {
	
	public PushDownAttribute_TargetClassKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownAttributeAccess().getTargetClassKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownAttribute_AttributeToBePushedAssignment_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class PushDownAttribute_ColonKeyword_10 extends KeywordToken  {
	
	public PushDownAttribute_ColonKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownAttributeAccess().getColonKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownAttribute_TargetClassKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// targetClass=[Class]
protected class PushDownAttribute_TargetClassAssignment_11 extends AssignmentToken  {
	
	public PushDownAttribute_TargetClassAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPushDownAttributeAccess().getTargetClassAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownAttribute_ColonKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("targetClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("targetClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPushDownAttributeAccess().getTargetClassClassCrossReference_11_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPushDownAttributeAccess().getTargetClassClassCrossReference_11_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class PushDownAttribute_RightCurlyBracketKeyword_12 extends KeywordToken  {
	
	public PushDownAttribute_RightCurlyBracketKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownAttributeAccess().getRightCurlyBracketKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownAttribute_TargetClassAssignment_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule PushDownAttribute ****************/


/************ begin Rule PushDownMethod ****************
 *
 * PushDownMethod:
 * 	"Refactoring_PushDownMethod" name=ID "{" "sourceClass" ":" sourceClass=[Class] "methodToPushDown" ":"
 * 	methodToBePushed=[Method] "targetClass" ":" targetClass=[Class] "}";
 *
 **/

// "Refactoring_PushDownMethod" name=ID "{" "sourceClass" ":" sourceClass=[Class] "methodToPushDown" ":"
// methodToBePushed=[Method] "targetClass" ":" targetClass=[Class] "}"
protected class PushDownMethod_Group extends GroupToken {
	
	public PushDownMethod_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPushDownMethodAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownMethod_RightCurlyBracketKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPushDownMethodRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Refactoring_PushDownMethod"
protected class PushDownMethod_Refactoring_PushDownMethodKeyword_0 extends KeywordToken  {
	
	public PushDownMethod_Refactoring_PushDownMethodKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownMethodAccess().getRefactoring_PushDownMethodKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class PushDownMethod_NameAssignment_1 extends AssignmentToken  {
	
	public PushDownMethod_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPushDownMethodAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownMethod_Refactoring_PushDownMethodKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPushDownMethodAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPushDownMethodAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class PushDownMethod_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public PushDownMethod_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownMethodAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownMethod_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sourceClass"
protected class PushDownMethod_SourceClassKeyword_3 extends KeywordToken  {
	
	public PushDownMethod_SourceClassKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownMethodAccess().getSourceClassKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownMethod_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class PushDownMethod_ColonKeyword_4 extends KeywordToken  {
	
	public PushDownMethod_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownMethodAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownMethod_SourceClassKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceClass=[Class]
protected class PushDownMethod_SourceClassAssignment_5 extends AssignmentToken  {
	
	public PushDownMethod_SourceClassAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPushDownMethodAccess().getSourceClassAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownMethod_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPushDownMethodAccess().getSourceClassClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPushDownMethodAccess().getSourceClassClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "methodToPushDown"
protected class PushDownMethod_MethodToPushDownKeyword_6 extends KeywordToken  {
	
	public PushDownMethod_MethodToPushDownKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownMethodAccess().getMethodToPushDownKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownMethod_SourceClassAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class PushDownMethod_ColonKeyword_7 extends KeywordToken  {
	
	public PushDownMethod_ColonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownMethodAccess().getColonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownMethod_MethodToPushDownKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// methodToBePushed=[Method]
protected class PushDownMethod_MethodToBePushedAssignment_8 extends AssignmentToken  {
	
	public PushDownMethod_MethodToBePushedAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPushDownMethodAccess().getMethodToBePushedAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownMethod_ColonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("methodToBePushed",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("methodToBePushed");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPushDownMethodAccess().getMethodToBePushedMethodCrossReference_8_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPushDownMethodAccess().getMethodToBePushedMethodCrossReference_8_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "targetClass"
protected class PushDownMethod_TargetClassKeyword_9 extends KeywordToken  {
	
	public PushDownMethod_TargetClassKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownMethodAccess().getTargetClassKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownMethod_MethodToBePushedAssignment_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class PushDownMethod_ColonKeyword_10 extends KeywordToken  {
	
	public PushDownMethod_ColonKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownMethodAccess().getColonKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownMethod_TargetClassKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// targetClass=[Class]
protected class PushDownMethod_TargetClassAssignment_11 extends AssignmentToken  {
	
	public PushDownMethod_TargetClassAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPushDownMethodAccess().getTargetClassAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownMethod_ColonKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("targetClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("targetClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPushDownMethodAccess().getTargetClassClassCrossReference_11_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPushDownMethodAccess().getTargetClassClassCrossReference_11_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class PushDownMethod_RightCurlyBracketKeyword_12 extends KeywordToken  {
	
	public PushDownMethod_RightCurlyBracketKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPushDownMethodAccess().getRightCurlyBracketKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PushDownMethod_TargetClassAssignment_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule PushDownMethod ****************/


/************ begin Rule PullUpAttribute ****************
 *
 * PullUpAttribute:
 * 	"Refactoring_PullUpAttribute" name=ID "{" "sourceClass" ":" sourceClass=[Class] "attributeToPullUp" ":"
 * 	attributeToBePulled=[Attribute] "targetClass" ":" targetClass=[Class] "}";
 *
 **/

// "Refactoring_PullUpAttribute" name=ID "{" "sourceClass" ":" sourceClass=[Class] "attributeToPullUp" ":"
// attributeToBePulled=[Attribute] "targetClass" ":" targetClass=[Class] "}"
protected class PullUpAttribute_Group extends GroupToken {
	
	public PullUpAttribute_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPullUpAttributeAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpAttribute_RightCurlyBracketKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPullUpAttributeRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Refactoring_PullUpAttribute"
protected class PullUpAttribute_Refactoring_PullUpAttributeKeyword_0 extends KeywordToken  {
	
	public PullUpAttribute_Refactoring_PullUpAttributeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpAttributeAccess().getRefactoring_PullUpAttributeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class PullUpAttribute_NameAssignment_1 extends AssignmentToken  {
	
	public PullUpAttribute_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPullUpAttributeAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpAttribute_Refactoring_PullUpAttributeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPullUpAttributeAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPullUpAttributeAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class PullUpAttribute_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public PullUpAttribute_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpAttributeAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpAttribute_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sourceClass"
protected class PullUpAttribute_SourceClassKeyword_3 extends KeywordToken  {
	
	public PullUpAttribute_SourceClassKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpAttributeAccess().getSourceClassKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpAttribute_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class PullUpAttribute_ColonKeyword_4 extends KeywordToken  {
	
	public PullUpAttribute_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpAttributeAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpAttribute_SourceClassKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceClass=[Class]
protected class PullUpAttribute_SourceClassAssignment_5 extends AssignmentToken  {
	
	public PullUpAttribute_SourceClassAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPullUpAttributeAccess().getSourceClassAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpAttribute_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPullUpAttributeAccess().getSourceClassClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPullUpAttributeAccess().getSourceClassClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "attributeToPullUp"
protected class PullUpAttribute_AttributeToPullUpKeyword_6 extends KeywordToken  {
	
	public PullUpAttribute_AttributeToPullUpKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpAttributeAccess().getAttributeToPullUpKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpAttribute_SourceClassAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class PullUpAttribute_ColonKeyword_7 extends KeywordToken  {
	
	public PullUpAttribute_ColonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpAttributeAccess().getColonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpAttribute_AttributeToPullUpKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// attributeToBePulled=[Attribute]
protected class PullUpAttribute_AttributeToBePulledAssignment_8 extends AssignmentToken  {
	
	public PullUpAttribute_AttributeToBePulledAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPullUpAttributeAccess().getAttributeToBePulledAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpAttribute_ColonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("attributeToBePulled",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("attributeToBePulled");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPullUpAttributeAccess().getAttributeToBePulledAttributeCrossReference_8_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPullUpAttributeAccess().getAttributeToBePulledAttributeCrossReference_8_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "targetClass"
protected class PullUpAttribute_TargetClassKeyword_9 extends KeywordToken  {
	
	public PullUpAttribute_TargetClassKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpAttributeAccess().getTargetClassKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpAttribute_AttributeToBePulledAssignment_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class PullUpAttribute_ColonKeyword_10 extends KeywordToken  {
	
	public PullUpAttribute_ColonKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpAttributeAccess().getColonKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpAttribute_TargetClassKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// targetClass=[Class]
protected class PullUpAttribute_TargetClassAssignment_11 extends AssignmentToken  {
	
	public PullUpAttribute_TargetClassAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPullUpAttributeAccess().getTargetClassAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpAttribute_ColonKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("targetClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("targetClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPullUpAttributeAccess().getTargetClassClassCrossReference_11_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPullUpAttributeAccess().getTargetClassClassCrossReference_11_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class PullUpAttribute_RightCurlyBracketKeyword_12 extends KeywordToken  {
	
	public PullUpAttribute_RightCurlyBracketKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpAttributeAccess().getRightCurlyBracketKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpAttribute_TargetClassAssignment_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule PullUpAttribute ****************/


/************ begin Rule PullUpMethod ****************
 *
 * PullUpMethod:
 * 	"Refactoring_PullUpMethod" name=ID "{" "sourceClass" ":" sourceClass=[Class] "methodToPullUp" ":"
 * 	methodToBePulled=[Method] "targetClass" ":" targetClass=[Class] "}";
 *
 **/

// "Refactoring_PullUpMethod" name=ID "{" "sourceClass" ":" sourceClass=[Class] "methodToPullUp" ":"
// methodToBePulled=[Method] "targetClass" ":" targetClass=[Class] "}"
protected class PullUpMethod_Group extends GroupToken {
	
	public PullUpMethod_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPullUpMethodAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpMethod_RightCurlyBracketKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPullUpMethodRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "Refactoring_PullUpMethod"
protected class PullUpMethod_Refactoring_PullUpMethodKeyword_0 extends KeywordToken  {
	
	public PullUpMethod_Refactoring_PullUpMethodKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpMethodAccess().getRefactoring_PullUpMethodKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=ID
protected class PullUpMethod_NameAssignment_1 extends AssignmentToken  {
	
	public PullUpMethod_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPullUpMethodAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpMethod_Refactoring_PullUpMethodKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPullUpMethodAccess().getNameIDTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getPullUpMethodAccess().getNameIDTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class PullUpMethod_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public PullUpMethod_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpMethodAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpMethod_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sourceClass"
protected class PullUpMethod_SourceClassKeyword_3 extends KeywordToken  {
	
	public PullUpMethod_SourceClassKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpMethodAccess().getSourceClassKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpMethod_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class PullUpMethod_ColonKeyword_4 extends KeywordToken  {
	
	public PullUpMethod_ColonKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpMethodAccess().getColonKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpMethod_SourceClassKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sourceClass=[Class]
protected class PullUpMethod_SourceClassAssignment_5 extends AssignmentToken  {
	
	public PullUpMethod_SourceClassAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPullUpMethodAccess().getSourceClassAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpMethod_ColonKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sourceClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sourceClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPullUpMethodAccess().getSourceClassClassCrossReference_5_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPullUpMethodAccess().getSourceClassClassCrossReference_5_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "methodToPullUp"
protected class PullUpMethod_MethodToPullUpKeyword_6 extends KeywordToken  {
	
	public PullUpMethod_MethodToPullUpKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpMethodAccess().getMethodToPullUpKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpMethod_SourceClassAssignment_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class PullUpMethod_ColonKeyword_7 extends KeywordToken  {
	
	public PullUpMethod_ColonKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpMethodAccess().getColonKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpMethod_MethodToPullUpKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// methodToBePulled=[Method]
protected class PullUpMethod_MethodToBePulledAssignment_8 extends AssignmentToken  {
	
	public PullUpMethod_MethodToBePulledAssignment_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPullUpMethodAccess().getMethodToBePulledAssignment_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpMethod_ColonKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("methodToBePulled",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("methodToBePulled");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPullUpMethodAccess().getMethodToBePulledMethodCrossReference_8_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPullUpMethodAccess().getMethodToBePulledMethodCrossReference_8_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "targetClass"
protected class PullUpMethod_TargetClassKeyword_9 extends KeywordToken  {
	
	public PullUpMethod_TargetClassKeyword_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpMethodAccess().getTargetClassKeyword_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpMethod_MethodToBePulledAssignment_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ":"
protected class PullUpMethod_ColonKeyword_10 extends KeywordToken  {
	
	public PullUpMethod_ColonKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpMethodAccess().getColonKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpMethod_TargetClassKeyword_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// targetClass=[Class]
protected class PullUpMethod_TargetClassAssignment_11 extends AssignmentToken  {
	
	public PullUpMethod_TargetClassAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPullUpMethodAccess().getTargetClassAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpMethod_ColonKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("targetClass",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("targetClass");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getPullUpMethodAccess().getTargetClassClassCrossReference_11_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getPullUpMethodAccess().getTargetClassClassCrossReference_11_0(); 
				return obj;
			}
		}
		return null;
	}

}

// "}"
protected class PullUpMethod_RightCurlyBracketKeyword_12 extends KeywordToken  {
	
	public PullUpMethod_RightCurlyBracketKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPullUpMethodAccess().getRightCurlyBracketKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PullUpMethod_TargetClassAssignment_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule PullUpMethod ****************/

}
