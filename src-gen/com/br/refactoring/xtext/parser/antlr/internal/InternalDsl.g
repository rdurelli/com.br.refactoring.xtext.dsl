/*
* generated by Xtext
*/
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.br.refactoring.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.br.refactoring.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.br.refactoring.xtext.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;
 	
    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='model' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelAccess().getModelKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getImportsImportParserRuleCall_2_0()); 
	    }
		lv_imports_2_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_2_0, 
        		"Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getContainsTypeParserRuleCall_3_0()); 
	    }
		lv_contains_3_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"contains",
        		lv_contains_3_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='importing' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportingKeyword_0());
    }
(
(
		lv_importURI_1_0=RULE_STRING
		{
			newLeafNode(lv_importURI_1_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getClassParserRuleCall_0()); 
    }
    this_Class_0=ruleClass
    { 
        $current = $this_Class_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getRefactoringParserRuleCall_1()); 
    }
    this_Refactoring_1=ruleRefactoring
    { 
        $current = $this_Refactoring_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleClass
entryRuleClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassRule()); }
	 iv_ruleClass=ruleClass 
	 { $current=$iv_ruleClass.current; } 
	 EOF 
;

// Rule Class
ruleClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Class' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassAccess().getClassKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getAttributesAttributeParserRuleCall_3_0()); 
	    }
		lv_attributes_3_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_3_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getClassAccess().getMethodsMethodParserRuleCall_4_0()); 
	    }
		lv_methods_4_0=ruleMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassRule());
	        }
       		add(
       			$current, 
       			"methods",
        		lv_methods_4_0, 
        		"Method");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getCommercialAtKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getElementTypeElementTypeParserRuleCall_1_0()); 
	    }
		lv_elementType_1_0=ruleElementType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"elementType",
        		lv_elementType_1_0, 
        		"ElementType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleElementType
entryRuleElementType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementTypeRule()); }
	 iv_ruleElementType=ruleElementType 
	 { $current=$iv_ruleElementType.current; } 
	 EOF 
;

// Rule ElementType
ruleElementType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getElementTypeAccess().getBasicTypeParserRuleCall_0()); 
    }
    this_BasicType_0=ruleBasicType
    { 
        $current = $this_BasicType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementTypeAccess().getClassTypeParserRuleCall_1()); 
    }
    this_ClassType_1=ruleClassType
    { 
        $current = $this_ClassType_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBasicType
entryRuleBasicType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicTypeRule()); }
	 iv_ruleBasicType=ruleBasicType 
	 { $current=$iv_ruleBasicType.current; } 
	 EOF 
;

// Rule BasicType
ruleBasicType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_typeName_0_1=	'string' 
    {
        newLeafNode(lv_typeName_0_1, grammarAccess.getBasicTypeAccess().getTypeNameStringKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "typeName", lv_typeName_0_1, null);
	    }

    |		lv_typeName_0_2=	'int' 
    {
        newLeafNode(lv_typeName_0_2, grammarAccess.getBasicTypeAccess().getTypeNameIntKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "typeName", lv_typeName_0_2, null);
	    }

    |		lv_typeName_0_3=	'boolean' 
    {
        newLeafNode(lv_typeName_0_3, grammarAccess.getBasicTypeAccess().getTypeNameBooleanKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "typeName", lv_typeName_0_3, null);
	    }

    |		lv_typeName_0_4=	'float' 
    {
        newLeafNode(lv_typeName_0_4, grammarAccess.getBasicTypeAccess().getTypeNameFloatKeyword_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "typeName", lv_typeName_0_4, null);
	    }

    |		lv_typeName_0_5=	'char' 
    {
        newLeafNode(lv_typeName_0_5, grammarAccess.getBasicTypeAccess().getTypeNameCharKeyword_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "typeName", lv_typeName_0_5, null);
	    }

    |		lv_typeName_0_6=	'byte' 
    {
        newLeafNode(lv_typeName_0_6, grammarAccess.getBasicTypeAccess().getTypeNameByteKeyword_0_5());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "typeName", lv_typeName_0_6, null);
	    }

    |		lv_typeName_0_7=	'short' 
    {
        newLeafNode(lv_typeName_0_7, grammarAccess.getBasicTypeAccess().getTypeNameShortKeyword_0_6());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "typeName", lv_typeName_0_7, null);
	    }

    |		lv_typeName_0_8=	'long' 
    {
        newLeafNode(lv_typeName_0_8, grammarAccess.getBasicTypeAccess().getTypeNameLongKeyword_0_7());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "typeName", lv_typeName_0_8, null);
	    }

    |		lv_typeName_0_9=	'double' 
    {
        newLeafNode(lv_typeName_0_9, grammarAccess.getBasicTypeAccess().getTypeNameDoubleKeyword_0_8());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicTypeRule());
	        }
       		setWithLastConsumed($current, "typeName", lv_typeName_0_9, null);
	    }

)

)
)
;





// Entry rule entryRuleClassType
entryRuleClassType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassTypeRule()); }
	 iv_ruleClassType=ruleClassType 
	 { $current=$iv_ruleClassType.current; } 
	 EOF 
;

// Rule ClassType
ruleClassType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassTypeRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getClassTypeAccess().getClassTypeClassCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	 iv_ruleMethod=ruleMethod 
	 { $current=$iv_ruleMethod.current; } 
	 EOF 
;

// Rule Method
ruleMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='def' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMethodAccess().getDefKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleRefactoring
entryRuleRefactoring returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefactoringRule()); }
	 iv_ruleRefactoring=ruleRefactoring 
	 { $current=$iv_ruleRefactoring.current; } 
	 EOF 
;

// Rule Refactoring
ruleRefactoring returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRefactoringAccess().getRenameFeatureParserRuleCall_0()); 
    }
    this_RenameFeature_0=ruleRenameFeature
    { 
        $current = $this_RenameFeature_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRefactoringAccess().getMovingFeaturesBetweenObjectsParserRuleCall_1()); 
    }
    this_MovingFeaturesBetweenObjects_1=ruleMovingFeaturesBetweenObjects
    { 
        $current = $this_MovingFeaturesBetweenObjects_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRefactoringAccess().getOrganizingDataParserRuleCall_2()); 
    }
    this_OrganizingData_2=ruleOrganizingData
    { 
        $current = $this_OrganizingData_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRefactoringAccess().getDealingWithGeneralizationParserRuleCall_3()); 
    }
    this_DealingWithGeneralization_3=ruleDealingWithGeneralization
    { 
        $current = $this_DealingWithGeneralization_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRenameFeature
entryRuleRenameFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRenameFeatureRule()); }
	 iv_ruleRenameFeature=ruleRenameFeature 
	 { $current=$iv_ruleRenameFeature.current; } 
	 EOF 
;

// Rule RenameFeature
ruleRenameFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Rename_Feature' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRenameFeatureAccess().getRename_FeatureKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRenameFeatureAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenameFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRenameFeatureAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRenameFeatureAccess().getAllRefactoringsRenameClassParserRuleCall_3_0()); 
	    }
		lv_allRefactorings_3_0=ruleRenameClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRenameFeatureRule());
	        }
       		add(
       			$current, 
       			"allRefactorings",
        		lv_allRefactorings_3_0, 
        		"RenameClass");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRenameFeatureAccess().getAllRefactoringsRenameAttributeParserRuleCall_4_0()); 
	    }
		lv_allRefactorings_4_0=ruleRenameAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRenameFeatureRule());
	        }
       		add(
       			$current, 
       			"allRefactorings",
        		lv_allRefactorings_4_0, 
        		"RenameAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRenameFeatureAccess().getAllRefactoringsRenameMethodParserRuleCall_5_0()); 
	    }
		lv_allRefactorings_5_0=ruleRenameMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRenameFeatureRule());
	        }
       		add(
       			$current, 
       			"allRefactorings",
        		lv_allRefactorings_5_0, 
        		"RenameMethod");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRenameFeatureAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleRenameClass
entryRuleRenameClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRenameClassRule()); }
	 iv_ruleRenameClass=ruleRenameClass 
	 { $current=$iv_ruleRenameClass.current; } 
	 EOF 
;

// Rule RenameClass
ruleRenameClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Refactoring_RenameClass' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRenameClassAccess().getRefactoring_RenameClassKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRenameClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenameClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRenameClassAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='classToBeRename' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRenameClassAccess().getClassToBeRenameKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRenameClassAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenameClassRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getRenameClassAccess().getClassToBeRenameClassCrossReference_5_0()); 
	}

)
)	otherlv_6='newName' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRenameClassAccess().getNewNameKeyword_6());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRenameClassAccess().getColonKeyword_7());
    }
(
(
		lv_newName_8_0=RULE_ID
		{
			newLeafNode(lv_newName_8_0, grammarAccess.getRenameClassAccess().getNewNameIDTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenameClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"newName",
        		lv_newName_8_0, 
        		"ID");
	    }

)
)	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRenameClassAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleRenameAttribute
entryRuleRenameAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRenameAttributeRule()); }
	 iv_ruleRenameAttribute=ruleRenameAttribute 
	 { $current=$iv_ruleRenameAttribute.current; } 
	 EOF 
;

// Rule RenameAttribute
ruleRenameAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Refactiong_RenameAttribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRenameAttributeAccess().getRefactiong_RenameAttributeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRenameAttributeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenameAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRenameAttributeAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='sourceClass' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRenameAttributeAccess().getSourceClassKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRenameAttributeAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenameAttributeRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getRenameAttributeAccess().getSourceClassClassCrossReference_5_0()); 
	}

)
)	otherlv_6='attributeToBeRename' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRenameAttributeAccess().getAttributeToBeRenameKeyword_6());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRenameAttributeAccess().getColonKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenameAttributeRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getRenameAttributeAccess().getAttributeToBeRenameAttributeCrossReference_8_0()); 
	}

)
)	otherlv_9='newName' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRenameAttributeAccess().getNewNameKeyword_9());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRenameAttributeAccess().getColonKeyword_10());
    }
(
(
		lv_newName_11_0=RULE_ID
		{
			newLeafNode(lv_newName_11_0, grammarAccess.getRenameAttributeAccess().getNewNameIDTerminalRuleCall_11_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenameAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"newName",
        		lv_newName_11_0, 
        		"ID");
	    }

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRenameAttributeAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleRenameMethod
entryRuleRenameMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRenameMethodRule()); }
	 iv_ruleRenameMethod=ruleRenameMethod 
	 { $current=$iv_ruleRenameMethod.current; } 
	 EOF 
;

// Rule RenameMethod
ruleRenameMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Refactoring_RenameMethod' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRenameMethodAccess().getRefactoring_RenameMethodKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getRenameMethodAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenameMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRenameMethodAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='sourceClass' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRenameMethodAccess().getSourceClassKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRenameMethodAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenameMethodRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getRenameMethodAccess().getSourceClassClassCrossReference_5_0()); 
	}

)
)	otherlv_6='methodToBeRename' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRenameMethodAccess().getMethodToBeRenameKeyword_6());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRenameMethodAccess().getColonKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenameMethodRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getRenameMethodAccess().getMethodToBeRenameMethodCrossReference_8_0()); 
	}

)
)	otherlv_9='newName' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRenameMethodAccess().getNewNameKeyword_9());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getRenameMethodAccess().getColonKeyword_10());
    }
(
(
		lv_newName_11_0=RULE_ID
		{
			newLeafNode(lv_newName_11_0, grammarAccess.getRenameMethodAccess().getNewNameIDTerminalRuleCall_11_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRenameMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"newName",
        		lv_newName_11_0, 
        		"ID");
	    }

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRenameMethodAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleMovingFeaturesBetweenObjects
entryRuleMovingFeaturesBetweenObjects returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMovingFeaturesBetweenObjectsRule()); }
	 iv_ruleMovingFeaturesBetweenObjects=ruleMovingFeaturesBetweenObjects 
	 { $current=$iv_ruleMovingFeaturesBetweenObjects.current; } 
	 EOF 
;

// Rule MovingFeaturesBetweenObjects
ruleMovingFeaturesBetweenObjects returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='MovingFeaturesBetweenObjects' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMovingFeaturesBetweenObjectsAccess().getMovingFeaturesBetweenObjectsKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMovingFeaturesBetweenObjectsAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMovingFeaturesBetweenObjectsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMovingFeaturesBetweenObjectsAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMovingFeaturesBetweenObjectsAccess().getAllRefactoringsMoveAttributeParserRuleCall_3_0()); 
	    }
		lv_allRefactorings_3_0=ruleMoveAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMovingFeaturesBetweenObjectsRule());
	        }
       		add(
       			$current, 
       			"allRefactorings",
        		lv_allRefactorings_3_0, 
        		"MoveAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMovingFeaturesBetweenObjectsAccess().getAllRefactoringsMoveMethodParserRuleCall_4_0()); 
	    }
		lv_allRefactorings_4_0=ruleMoveMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMovingFeaturesBetweenObjectsRule());
	        }
       		add(
       			$current, 
       			"allRefactorings",
        		lv_allRefactorings_4_0, 
        		"MoveMethod");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMovingFeaturesBetweenObjectsAccess().getAllRefactoringsExtractClassParserRuleCall_5_0()); 
	    }
		lv_allRefactorings_5_0=ruleExtractClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMovingFeaturesBetweenObjectsRule());
	        }
       		add(
       			$current, 
       			"allRefactorings",
        		lv_allRefactorings_5_0, 
        		"ExtractClass");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMovingFeaturesBetweenObjectsAccess().getAllRefactoringsInlineClassParserRuleCall_6_0()); 
	    }
		lv_allRefactorings_6_0=ruleInlineClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMovingFeaturesBetweenObjectsRule());
	        }
       		add(
       			$current, 
       			"allRefactorings",
        		lv_allRefactorings_6_0, 
        		"InlineClass");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMovingFeaturesBetweenObjectsAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleMoveAttribute
entryRuleMoveAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMoveAttributeRule()); }
	 iv_ruleMoveAttribute=ruleMoveAttribute 
	 { $current=$iv_ruleMoveAttribute.current; } 
	 EOF 
;

// Rule MoveAttribute
ruleMoveAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Refactoring_MoveAttribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMoveAttributeAccess().getRefactoring_MoveAttributeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMoveAttributeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMoveAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMoveAttributeAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='sourceClass' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMoveAttributeAccess().getSourceClassKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMoveAttributeAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMoveAttributeRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getMoveAttributeAccess().getSourceClassClassCrossReference_5_0()); 
	}

)
)	otherlv_6='targetClass' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMoveAttributeAccess().getTargetClassKeyword_6());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMoveAttributeAccess().getColonKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMoveAttributeRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getMoveAttributeAccess().getTargetClassClassCrossReference_8_0()); 
	}

)
)	otherlv_9='attributeToBeMoved' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMoveAttributeAccess().getAttributeToBeMovedKeyword_9());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMoveAttributeAccess().getColonKeyword_10());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMoveAttributeRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getMoveAttributeAccess().getAttributeToBeMovedAttributeCrossReference_11_0()); 
	}

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMoveAttributeAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleMoveMethod
entryRuleMoveMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMoveMethodRule()); }
	 iv_ruleMoveMethod=ruleMoveMethod 
	 { $current=$iv_ruleMoveMethod.current; } 
	 EOF 
;

// Rule MoveMethod
ruleMoveMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Refactoring_MoveMethod' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMoveMethodAccess().getRefactoring_MoveMethodKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMoveMethodAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMoveMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMoveMethodAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='sourceClass' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMoveMethodAccess().getSourceClassKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMoveMethodAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMoveMethodRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getMoveMethodAccess().getSourceClassClassCrossReference_5_0()); 
	}

)
)	otherlv_6='targetClass' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMoveMethodAccess().getTargetClassKeyword_6());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMoveMethodAccess().getColonKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMoveMethodRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getMoveMethodAccess().getTargetClassClassCrossReference_8_0()); 
	}

)
)	otherlv_9='methodToBeMoved' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMoveMethodAccess().getMethodToBeMovedKeyword_9());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMoveMethodAccess().getColonKeyword_10());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMoveMethodRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getMoveMethodAccess().getMethodToBeMovedMethodCrossReference_11_0()); 
	}

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMoveMethodAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleExtractClass
entryRuleExtractClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExtractClassRule()); }
	 iv_ruleExtractClass=ruleExtractClass 
	 { $current=$iv_ruleExtractClass.current; } 
	 EOF 
;

// Rule ExtractClass
ruleExtractClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Refactoring_ExtractClass' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExtractClassAccess().getRefactoring_ExtractClassKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExtractClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExtractClassAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='sourceClass' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExtractClassAccess().getSourceClassKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExtractClassAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractClassRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getExtractClassAccess().getSourceClassClassCrossReference_5_0()); 
	}

)
)	otherlv_6='attribute(s)ToBeMoved' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExtractClassAccess().getAttributeSToBeMovedKeyword_6());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExtractClassAccess().getColonKeyword_7());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getExtractClassAccess().getLeftCurlyBracketKeyword_8());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractClassRule());
	        }
        }
	otherlv_9=RULE_ID
	{
		newLeafNode(otherlv_9, grammarAccess.getExtractClassAccess().getAttributesToBeMovedAttributeCrossReference_9_0()); 
	}

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getExtractClassAccess().getCommaKeyword_10_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractClassRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getExtractClassAccess().getAttributesToBeMovedAttributeCrossReference_10_1_0()); 
	}

)
))*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getExtractClassAccess().getRightCurlyBracketKeyword_11());
    }
	otherlv_13='nameToTheNewClass' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getExtractClassAccess().getNameToTheNewClassKeyword_12());
    }
	otherlv_14=':' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getExtractClassAccess().getColonKeyword_13());
    }
(
(
		lv_newName_15_0=RULE_ID
		{
			newLeafNode(lv_newName_15_0, grammarAccess.getExtractClassAccess().getNewNameIDTerminalRuleCall_14_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExtractClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"newName",
        		lv_newName_15_0, 
        		"ID");
	    }

)
)	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getExtractClassAccess().getRightCurlyBracketKeyword_15());
    }
)
;





// Entry rule entryRuleInlineClass
entryRuleInlineClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInlineClassRule()); }
	 iv_ruleInlineClass=ruleInlineClass 
	 { $current=$iv_ruleInlineClass.current; } 
	 EOF 
;

// Rule InlineClass
ruleInlineClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Refactoring_InlineClass' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInlineClassAccess().getRefactoring_InlineClassKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInlineClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInlineClassAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='classToGetAllFeatures' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInlineClassAccess().getClassToGetAllFeaturesKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInlineClassAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineClassRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getInlineClassAccess().getClassToGetAllFeaturesClassCrossReference_5_0()); 
	}

)
)	otherlv_6='classToRemove' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInlineClassAccess().getClassToRemoveKeyword_6());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInlineClassAccess().getColonKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInlineClassRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getInlineClassAccess().getClassToRemoveClassCrossReference_8_0()); 
	}

)
)	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInlineClassAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleOrganizingData
entryRuleOrganizingData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrganizingDataRule()); }
	 iv_ruleOrganizingData=ruleOrganizingData 
	 { $current=$iv_ruleOrganizingData.current; } 
	 EOF 
;

// Rule OrganizingData
ruleOrganizingData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='OrganizingData' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrganizingDataAccess().getOrganizingDataKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getOrganizingDataAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrganizingDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOrganizingDataAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrganizingDataAccess().getAllRefactoringsReplaceDataValueWithObjectParserRuleCall_3_0()); 
	    }
		lv_allRefactorings_3_0=ruleReplaceDataValueWithObject		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrganizingDataRule());
	        }
       		add(
       			$current, 
       			"allRefactorings",
        		lv_allRefactorings_3_0, 
        		"ReplaceDataValueWithObject");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getOrganizingDataAccess().getAllRefactoringsEncapsulateFieldParserRuleCall_4_0()); 
	    }
		lv_allRefactorings_4_0=ruleEncapsulateField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrganizingDataRule());
	        }
       		add(
       			$current, 
       			"allRefactorings",
        		lv_allRefactorings_4_0, 
        		"EncapsulateField");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOrganizingDataAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleReplaceDataValueWithObject
entryRuleReplaceDataValueWithObject returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReplaceDataValueWithObjectRule()); }
	 iv_ruleReplaceDataValueWithObject=ruleReplaceDataValueWithObject 
	 { $current=$iv_ruleReplaceDataValueWithObject.current; } 
	 EOF 
;

// Rule ReplaceDataValueWithObject
ruleReplaceDataValueWithObject returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Refactoring_ReplaceDataValueWithObject' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReplaceDataValueWithObjectAccess().getRefactoring_ReplaceDataValueWithObjectKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getReplaceDataValueWithObjectAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReplaceDataValueWithObjectRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReplaceDataValueWithObjectAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='sourceClass' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getReplaceDataValueWithObjectAccess().getSourceClassKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getReplaceDataValueWithObjectAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReplaceDataValueWithObjectRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getReplaceDataValueWithObjectAccess().getSourceClassClassCrossReference_5_0()); 
	}

)
)	otherlv_6='attributeToReplaceDataWithObject' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getReplaceDataValueWithObjectAccess().getAttributeToReplaceDataWithObjectKeyword_6());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getReplaceDataValueWithObjectAccess().getColonKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReplaceDataValueWithObjectRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getReplaceDataValueWithObjectAccess().getAttributeToReplaceDataWithObjectAttributeCrossReference_8_0()); 
	}

)
)	otherlv_9='newAttributes' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getReplaceDataValueWithObjectAccess().getNewAttributesKeyword_9());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getReplaceDataValueWithObjectAccess().getColonKeyword_10());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getReplaceDataValueWithObjectAccess().getLeftCurlyBracketKeyword_11());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReplaceDataValueWithObjectAccess().getNewAttributesAttributeParserRuleCall_12_0()); 
	    }
		lv_newAttributes_12_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReplaceDataValueWithObjectRule());
	        }
       		add(
       			$current, 
       			"newAttributes",
        		lv_newAttributes_12_0, 
        		"Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getReplaceDataValueWithObjectAccess().getRightCurlyBracketKeyword_13());
    }
	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getReplaceDataValueWithObjectAccess().getRightCurlyBracketKeyword_14());
    }
)
;





// Entry rule entryRuleEncapsulateField
entryRuleEncapsulateField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEncapsulateFieldRule()); }
	 iv_ruleEncapsulateField=ruleEncapsulateField 
	 { $current=$iv_ruleEncapsulateField.current; } 
	 EOF 
;

// Rule EncapsulateField
ruleEncapsulateField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Refactoring_EncapsulateField' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEncapsulateFieldAccess().getRefactoring_EncapsulateFieldKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEncapsulateFieldAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEncapsulateFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEncapsulateFieldAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='sourceClass' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEncapsulateFieldAccess().getSourceClassKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEncapsulateFieldAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEncapsulateFieldRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getEncapsulateFieldAccess().getSourceClassClassCrossReference_5_0()); 
	}

)
)	otherlv_6='attributeToEncapsulate' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEncapsulateFieldAccess().getAttributeToEncapsulateKeyword_6());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEncapsulateFieldAccess().getColonKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEncapsulateFieldRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getEncapsulateFieldAccess().getAttributeToEncapsulateAttributeCrossReference_8_0()); 
	}

)
)	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEncapsulateFieldAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleDealingWithGeneralization
entryRuleDealingWithGeneralization returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDealingWithGeneralizationRule()); }
	 iv_ruleDealingWithGeneralization=ruleDealingWithGeneralization 
	 { $current=$iv_ruleDealingWithGeneralization.current; } 
	 EOF 
;

// Rule DealingWithGeneralization
ruleDealingWithGeneralization returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DealingWithGeneralization' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDealingWithGeneralizationAccess().getDealingWithGeneralizationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDealingWithGeneralizationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDealingWithGeneralizationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDealingWithGeneralizationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDealingWithGeneralizationAccess().getAllRefactoringsPushDownMethodParserRuleCall_3_0()); 
	    }
		lv_allRefactorings_3_0=rulePushDownMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDealingWithGeneralizationRule());
	        }
       		add(
       			$current, 
       			"allRefactorings",
        		lv_allRefactorings_3_0, 
        		"PushDownMethod");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDealingWithGeneralizationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulePushDownMethod
entryRulePushDownMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPushDownMethodRule()); }
	 iv_rulePushDownMethod=rulePushDownMethod 
	 { $current=$iv_rulePushDownMethod.current; } 
	 EOF 
;

// Rule PushDownMethod
rulePushDownMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Refactoring_PushDownMethod' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPushDownMethodAccess().getRefactoring_PushDownMethodKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPushDownMethodAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPushDownMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPushDownMethodAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='sourceClass' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPushDownMethodAccess().getSourceClassKeyword_3());
    }
	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPushDownMethodAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPushDownMethodRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getPushDownMethodAccess().getSourceClassClassCrossReference_5_0()); 
	}

)
)	otherlv_6='methodToPushDown' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPushDownMethodAccess().getMethodToPushDownKeyword_6());
    }
	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPushDownMethodAccess().getColonKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPushDownMethodRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getPushDownMethodAccess().getMethodToBePushedMethodCrossReference_8_0()); 
	}

)
)	otherlv_9='targetClass' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPushDownMethodAccess().getTargetClassKeyword_9());
    }
	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPushDownMethodAccess().getColonKeyword_10());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPushDownMethodRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getPushDownMethodAccess().getTargetClassClassCrossReference_11_0()); 
	}

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getPushDownMethodAccess().getRightCurlyBracketKeyword_12());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


